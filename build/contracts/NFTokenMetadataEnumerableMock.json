{
  "contractName": "NFTokenMetadataEnumerableMock",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "CANNOT_TRANSFER_TO_ZERO_ADDRESS",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "NOT_CURRENT_OWNER",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_approved",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceID",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        }
      ],
      "name": "tokenOfOwnerByIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_uri",
          "type": "string"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"CANNOT_TRANSFER_TO_ZERO_ADDRESS\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"NOT_CURRENT_OWNER\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_approved\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_uri\",\"type\":\"string\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is an example contract implementation of NFToken with enumerable and metadata extensions.\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Set or reaffirm the approved address for an NFT. This function can be changed to payable.\",\"params\":{\"_approved\":\"Address to be approved for the given NFT ID.\",\"_tokenId\":\"ID of the token to be approved.\"}},\"balanceOf(address)\":{\"details\":\"Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.\",\"params\":{\"_owner\":\"Address for whom to query the balance.\"},\"returns\":{\"_0\":\"Balance of _owner.\"}},\"burn(uint256)\":{\"details\":\"Removes a NFT from owner.\",\"params\":{\"_tokenId\":\"Which NFT we want to remove.\"}},\"constructor\":{\"details\":\"Contract constructor.\",\"params\":{\"_name\":\"A descriptive name for a collection of NFTs.\",\"_symbol\":\"An abbreviated name for NFTokens.\"}},\"getApproved(uint256)\":{\"details\":\"Get the approved address for a single NFT.\",\"params\":{\"_tokenId\":\"ID of the NFT to query the approval of.\"},\"returns\":{\"_0\":\"Address that _tokenId is approved for.\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Checks if `_operator` is an approved operator for `_owner`.\",\"params\":{\"_operator\":\"The address that acts on behalf of the owner.\",\"_owner\":\"The address that owns the NFTs.\"},\"returns\":{\"_0\":\"True if approved for all, false otherwise.\"}},\"mint(address,uint256,string)\":{\"details\":\"Mints a new NFT.\",\"params\":{\"_to\":\"The address that will own the minted NFT.\",\"_tokenId\":\"of the NFT to be minted by the msg.sender.\",\"_uri\":\"String representing RFC 3986 URI.\"}},\"name()\":{\"details\":\"Returns a descriptive name for a collection of NFTokens.\",\"returns\":{\"_name\":\"Representing name.\"}},\"ownerOf(uint256)\":{\"details\":\"Returns the address of the owner of the NFT. NFTs assigned to the zero address are considered invalid, and queries about them do throw.\",\"params\":{\"_tokenId\":\"The identifier for an NFT.\"},\"returns\":{\"_owner\":\"Address of _tokenId owner.\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.\",\"params\":{\"_data\":\"Additional data with no specified format, sent in call to `_to`.\",\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Enables or disables approval for a third party (\\\"operator\\\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.\",\"params\":{\"_approved\":\"True if the operators is approved, false to revoke approval.\",\"_operator\":\"Address to add to the set of authorized operators.\"}},\"supportsInterface(bytes4)\":{\"details\":\"Function to check which interfaces are suported by this contract.\",\"params\":{\"_interfaceID\":\"Id of the interface.\"},\"returns\":{\"_0\":\"True if _interfaceID is supported, false otherwise.\"}},\"symbol()\":{\"details\":\"Returns an abbreviated name for NFTokens.\",\"returns\":{\"_symbol\":\"Representing symbol.\"}},\"tokenByIndex(uint256)\":{\"details\":\"Returns NFT ID by its index.\",\"params\":{\"_index\":\"A counter less than `totalSupply()`.\"},\"returns\":{\"_0\":\"Token id.\"}},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"returns the n-th NFT ID from a list of owner's tokens.\",\"params\":{\"_index\":\"Index number representing n-th token in owner's list of tokens.\",\"_owner\":\"Token owner's address.\"},\"returns\":{\"_0\":\"Token id.\"}},\"tokenURI(uint256)\":{\"details\":\"A distinct URI (RFC 3986) for a given NFT.\",\"params\":{\"_tokenId\":\"Id for which we want uri.\"},\"returns\":{\"_0\":\"URI of _tokenId.\"}},\"totalSupply()\":{\"details\":\"Returns the count of all existing NFTokens.\",\"returns\":{\"_0\":\"Total supply of NFTs.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.\",\"params\":{\"_from\":\"The current owner of the NFT.\",\"_to\":\"The new owner.\",\"_tokenId\":\"The NFT to transfer.\"}},\"transferOwnership(address)\":{\"details\":\"Allows the current owner to transfer control of the contract to a newOwner.\",\"params\":{\"_newOwner\":\"The address to transfer ownership to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner.\"},\"getApproved(uint256)\":{\"notice\":\"Throws if `_tokenId` is not a valid NFT.\"},\"safeTransferFrom(address,address,uint256)\":{\"notice\":\"This works identically to the other function with an extra data parameter, except this function just sets data to \\\"\\\".\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"notice\":\"Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\\\"onERC721Received(address,uint256,bytes)\\\"))`.\"},\"setApprovalForAll(address,bool)\":{\"notice\":\"This works even if sender doesn't own any tokens at the time.\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they may be permanently lost.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/contracts/mocks/nf-token-metadata-enumerable-mock.sol\":\"NFTokenMetadataEnumerableMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/contracts/mocks/nf-token-metadata-enumerable-mock.sol\":{\"keccak256\":\"0x2c4223f012fa2b6ed64bde3c7e9740d70bc45d426e03e8c4e1acff974deedaba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2eec095b02ccce806bad1d0ad0a5d2d88e66d333bc27eb108e729e296c687af6\",\"dweb:/ipfs/QmZmEQN9uNc5iF7WQS7i7B7mwDtiT2XbxCLxkSCGLqvuH2\"]},\"project:/contracts/contracts/ownership/ownable.sol\":{\"keccak256\":\"0x9b2cc9b0e96aed3f417ba1a540506d327eb4bae39979450a9f4bee796c9cd3d1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54e4c6a3f95214c74cc8eed1ed52a2bbb53df98ca8bc5ced0c44d354a808d375\",\"dweb:/ipfs/QmS6rXzzUwshAa6wtww3pwbmJdzsYjyJMNVtZEWdpfbk2T\"]},\"project:/contracts/contracts/tokens/erc721-enumerable.sol\":{\"keccak256\":\"0x05ce6fd319730e86762a917b0f2756920400299a11bd0573e6e4ce0c7326719d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16e4c60cff70e492649c051bd28ef453b12589b4a6ff5a5025d1428cef91691a\",\"dweb:/ipfs/QmaN69K6KLYLZbXFxdVoZk9QNXwvy4bmbvLsgg5a3ecqpD\"]},\"project:/contracts/contracts/tokens/erc721-metadata.sol\":{\"keccak256\":\"0x42f83c7b536d7356e6c0ad76906aec2d4788174c3bc2ff6932689d79f84593e3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://63f4cc120bb4a795b76c75890472067f934ee266f99df4a605782e82b0384f46\",\"dweb:/ipfs/QmRDFCRSsj13kGD4M4Sfpag5QLH6n7jwSpeDTRk6JiRpnk\"]},\"project:/contracts/contracts/tokens/erc721-token-receiver.sol\":{\"keccak256\":\"0x841d6c556e9813b2276ed73c295f984ef9229b2f082ad458de196aa5aeebd483\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44869eb9eaa25fada3db53623a3807e233ff2856c1f3c03dd248b6b3a9180672\",\"dweb:/ipfs/QmV7apf2bACmGtmRgCXfQjVmaKYpAP4MmaJq16swCPmc4V\"]},\"project:/contracts/contracts/tokens/erc721.sol\":{\"keccak256\":\"0x96c3cef85c3ff14676494b4ee580330449a3f1dc625d63132da14825d64c9eff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://286ead0a0462452fbd9008a01a7aebe02b1b84c10c7e0be9bb8aeff0d4bb04f6\",\"dweb:/ipfs/QmcmJiRmCkViPkkVGgj9WANhrZzWC6X9QtzvZrSiqT8kCg\"]},\"project:/contracts/contracts/tokens/nf-token-enumerable.sol\":{\"keccak256\":\"0x607bde0a2d247666ee5aaf2f889f9c35b5f65410445f77ed2023ee31db94d93f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://183ee800185ad252e5b15469522ad4cfad5fb81a0eb9b1b7c64d161f9511dd39\",\"dweb:/ipfs/Qme6D9iBarnDkDGrnFKnkdDJskTESZZaFfDSgfMXMYcpi7\"]},\"project:/contracts/contracts/tokens/nf-token-metadata.sol\":{\"keccak256\":\"0x2f2ec2fa399c44bc4d314f32e59ddded0cc9c5d412726a3b6b7ef73e2d75fa6f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5703ba34699e76ac6ecc65dc8aa44bb9d8de9d935e1e156d14380338c6498a32\",\"dweb:/ipfs/QmVe4uvsMSB1A8TsngkXaCPZGGo6mXrfxFqT5RM1c9TqEC\"]},\"project:/contracts/contracts/tokens/nf-token.sol\":{\"keccak256\":\"0xfff2e5aebf810461534c4eea537e7654a48a2bccb97f6d1beafff5447fcc696c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b3d671324eaf4fad5f743babe1350edaa366988d610d6313591de108e95978b\",\"dweb:/ipfs/QmdfJ4nmhsx3tC2AFLRY4P3Vn3EbumyiCyVthnzaewmaPb\"]},\"project:/contracts/contracts/utils/address-utils.sol\":{\"keccak256\":\"0x29cdeb28f1e34c1239b2f82d689e0ffd6b8a95daf603d5433c893074f3ccb7f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://30c95907b58747d92a0a53135d8de085a2e44335af62ec00c67ab4739742a595\",\"dweb:/ipfs/QmUGiu6HXg3rL3RfDKjH95jksjEmTcagNEc5id7DDBWpnk\"]},\"project:/contracts/contracts/utils/erc165.sol\":{\"keccak256\":\"0xd8c18f29926bf75aace3103a010f542399b6975d3f0a76e8b3f07f4c2fd55b0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://015f502839b075ace581add5da64411cacb6ccf1db0528c4e8efce29fb095f3b\",\"dweb:/ipfs/QmXaT1YBbnVFbGpG4Zrv6WuS7QDUyJGb6Gr7xEbGFEpWYE\"]},\"project:/contracts/contracts/utils/supports-interface.sol\":{\"keccak256\":\"0x1efe9984a265a0e4a2f2d795770e97419c2f265805a83b9a2b5502e5f8c36616\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9cc02a91a6d7b593feba6ee666f237f284710edbb4f32d1c8b701b83c69d596\",\"dweb:/ipfs/QmUkz7r8zGU8trjf7bk8cLo9sKEDMyVR6KQTdNoRU7317o\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162003b5138038062003b51833981810160405281019062000037919062000318565b60016000806301ffc9a760e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555060016000806380ac58cd60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff021916908315150217905550600160008063780e9d6360e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600080635b5e139f60e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060006101000a81548160ff02191690831515021790555033600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508160099080519060200190620001d4929190620001f6565b5080600a9080519060200190620001ed929190620001f6565b505050620004bc565b828054620002049062000428565b90600052602060002090601f01602090048101928262000228576000855562000274565b82601f106200024357805160ff191683800117855562000274565b8280016001018555821562000274579182015b828111156200027357825182559160200191906001019062000256565b5b50905062000283919062000287565b5090565b5b80821115620002a257600081600090555060010162000288565b5090565b6000620002bd620002b784620003bf565b6200038b565b905082815260208101848484011115620002d657600080fd5b620002e3848285620003f2565b509392505050565b600082601f830112620002fd57600080fd5b81516200030f848260208601620002a6565b91505092915050565b600080604083850312156200032c57600080fd5b600083015167ffffffffffffffff8111156200034757600080fd5b6200035585828601620002eb565b925050602083015167ffffffffffffffff8111156200037357600080fd5b6200038185828601620002eb565b9150509250929050565b6000604051905081810181811067ffffffffffffffff82111715620003b557620003b46200048d565b5b8060405250919050565b600067ffffffffffffffff821115620003dd57620003dc6200048d565b5b601f19601f8301169050602081019050919050565b60005b8381101562000412578082015181840152602081019050620003f5565b8381111562000422576000848401525b50505050565b600060028204905060018216806200044157607f821691505b602082108114156200045857620004576200045e565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61368580620004cc6000396000f3fe608060405234801561001057600080fd5b50600436106101425760003560e01c806370a08231116100b8578063b88d4fde1161007c578063b88d4fde14610389578063c87b56dd146103a5578063d3fc9864146103d5578063e985e9c5146103f1578063f2fde38b14610421578063f3fe3bc31461043d57610142565b806370a08231146102e3578063860d248a146103135780638da5cb5b1461033157806395d89b411461034f578063a22cb4651461036d57610142565b806323b872dd1161010a57806323b872dd146101ff5780632f745c591461021b57806342842e0e1461024b57806342966c68146102675780634f6ccce7146102835780636352211e146102b357610142565b806301ffc9a71461014757806306fdde0314610177578063081812fc14610195578063095ea7b3146101c557806318160ddd146101e1575b600080fd5b610161600480360381019061015c9190613266565b61045b565b60405161016e91906133e7565b60405180910390f35b61017f6104c2565b60405161018c9190613402565b60405180910390f35b6101af60048036038101906101aa91906132b8565b610554565b6040516101bc9190613380565b60405180910390f35b6101df60048036038101906101da91906131be565b61066f565b005b6101e9610a52565b6040516101f69190613424565b60405180910390f35b610219600480360381019061021491906130b3565b610a5f565b005b610235600480360381019061023091906131be565b610eb1565b6040516102429190613424565b60405180910390f35b610265600480360381019061026091906130b3565b610ffa565b005b610281600480360381019061027c91906132b8565b61101a565b005b61029d600480360381019061029891906132b8565b6110ef565b6040516102aa9190613424565b60405180910390f35b6102cd60048036038101906102c891906132b8565b6111bd565b6040516102da9190613380565b60405180910390f35b6102fd60048036038101906102f8919061304e565b6112a3565b60405161030a9190613424565b60405180910390f35b61031b61135d565b6040516103289190613402565b60405180910390f35b610339611396565b6040516103469190613380565b60405180910390f35b6103576113bc565b6040516103649190613402565b60405180910390f35b61038760048036038101906103829190613182565b61144e565b005b6103a3600480360381019061039e9190613102565b61154b565b005b6103bf60048036038101906103ba91906132b8565b6115a2565b6040516103cc9190613402565b60405180910390f35b6103ef60048036038101906103ea91906131fa565b611692565b005b61040b60048036038101906104069190613077565b6117b9565b60405161041891906133e7565b60405180910390f35b61043b6004803603810190610436919061304e565b61184d565b005b610445611a7f565b6040516104529190613402565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600980546104d190613552565b80601f01602080910402602001604051908101604052809291908181526020018280546104fd90613552565b801561054a5780601f1061051f5761010080835404028352916020019161054a565b820191906000526020600020905b81548152906001019060200180831161052d57829003601f168201915b5050505050905090565b600081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090610632576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106299190613402565b60405180910390fd5b506002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b8060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806107685750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f3030333030330000000000000000000000000000000000000000000000000000815250906107df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d69190613402565b60405180910390fd5b5082600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3030333030320000000000000000000000000000000000000000000000000000815250906108bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b39190613402565b60405180910390fd5b5060006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f30303330303800000000000000000000000000000000000000000000000000008152509061099c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109939190613402565b60405180910390fd5b50856002600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b6000600580549050905090565b8060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610b3057503373ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610bc15750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303034000000000000000000000000000000000000000000000000000081525090610c38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2f9190613402565b60405180910390fd5b5082600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090610d15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0c9190613402565b60405180910390fd5b5060006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303037000000000000000000000000000000000000000000000000000081525090610df4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610deb9190613402565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303031000000000000000000000000000000000000000000000000000081525090610e9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e949190613402565b60405180910390fd5b50610ea88686611ab8565b50505050505050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905082106040518060400160405280600681526020017f303035303037000000000000000000000000000000000000000000000000000081525090610f6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f669190613402565b60405180910390fd5b50600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610fe7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905092915050565b61101583838360405180602001604052806000815250611b6d565b505050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f3031383030310000000000000000000000000000000000000000000000000000815250906110e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d99190613402565b60405180910390fd5b506110ec8161213b565b50565b600060058054905082106040518060400160405280600681526020017f303035303037000000000000000000000000000000000000000000000000000081525090611170576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111679190613402565b60405180910390fd5b50600582815481106111ab577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050919050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f30303330303200000000000000000000000000000000000000000000000000008152509061129d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112949190613402565b60405180910390fd5b50919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f30303330303100000000000000000000000000000000000000000000000000008152509061134c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113439190613402565b60405180910390fd5b5061135682612166565b9050919050565b6040518060400160405280600681526020017f303138303032000000000000000000000000000000000000000000000000000081525081565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600a80546113cb90613552565b80601f01602080910402602001604051908101604052809291908181526020018280546113f790613552565b80156114445780601f1061141957610100808354040283529160200191611444565b820191906000526020600020905b81548152906001019060200180831161142757829003601f168201915b5050505050905090565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161153f91906133e7565b60405180910390a35050565b61159b85858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611b6d565b5050505050565b606081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090611680576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116779190613402565b60405180910390fd5b5061168a83612178565b915050919050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f30313830303100000000000000000000000000000000000000000000000000008152509061175a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117519190613402565b60405180910390fd5b50611765848461221d565b6117b38383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061227d565b50505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303138303031000000000000000000000000000000000000000000000000000081525090611915576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161190c9190613402565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3031383030320000000000000000000000000000000000000000000000000000815250906119be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119b59190613402565b60405180910390fd5b508073ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6040518060400160405280600681526020017f303138303031000000000000000000000000000000000000000000000000000081525081565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611af982612387565b611b0381836123c0565b611b0d83836123ce565b818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b8160006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480611c3e57503373ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80611ccf5750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303034000000000000000000000000000000000000000000000000000081525090611d46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d3d9190613402565b60405180910390fd5b5083600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090611e23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e1a9190613402565b60405180910390fd5b5060006001600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303037000000000000000000000000000000000000000000000000000081525090611f02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ef99190613402565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303031000000000000000000000000000000000000000000000000000081525090611fab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fa29190613402565b60405180910390fd5b50611fb68787611ab8565b611fd58773ffffffffffffffffffffffffffffffffffffffff166123dc565b156121315760008773ffffffffffffffffffffffffffffffffffffffff1663150b7a02338b8a8a6040518563ffffffff1660e01b815260040161201b949392919061339b565b602060405180830381600087803b15801561203557600080fd5b505af1158015612049573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061206d919061328f565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146040518060400160405280600681526020017f30303330303500000000000000000000000000000000000000000000000000008152509061212e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121259190613402565b60405180910390fd5b50505b5050505050505050565b61214481612427565b600b600082815260200190815260200160002060006121639190612e6e565b50565b600061217182612575565b9050919050565b6060600b6000838152602001908152602001600020805461219890613552565b80601f01602080910402602001604051908101604052809291908181526020018280546121c490613552565b80156122115780601f106121e657610100808354040283529160200191612211565b820191906000526020600020905b8154815290600101906020018083116121f457829003601f168201915b50505050509050919050565b61222782826125c1565b600581908060018154018082558091505060019003906000526020600020016000909190919091505560016005805490506122629190613477565b60066000838152602001908152602001600020819055505050565b81600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090612359576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123509190613402565b60405180910390fd5b5081600b60008581526020019081526020016000209080519060200190612381929190612eae565b50505050565b6002600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550565b6123ca82826127af565b5050565b6123d88282612ae8565b5050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b821415801561241e5750808214155b92505050919050565b61243081612ce5565b6000600660008381526020019081526020016000205490506000600160058054905061245c9190613477565b905060006005828154811061249a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905080600584815481106124e2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001819055506005805480612528577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600190038181906000526020600020016000905590558260066000838152602001908152602001600020819055506000600660008681526020019081526020016000208190555050505050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303031000000000000000000000000000000000000000000000000000081525090612669576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126609190613402565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303036000000000000000000000000000000000000000000000000000081525090612744576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161273b9190613402565b60405180910390fd5b5061274f82826123ce565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b8173ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303037000000000000000000000000000000000000000000000000000081525090612888576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161287f9190613402565b60405180910390fd5b506001600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560006008600083815260200190815260200160002054905060006001600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506129289190613477565b9050818114612a57576000600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106129aa577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905080600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110612a2f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200181905550826008600083815260200190815260200160002081905550505b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480612acc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303036000000000000000000000000000000000000000000000000000081525090612bc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bb99190613402565b60405180910390fd5b50816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150556001600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050612cca9190613477565b60086000838152602001908152602001600020819055505050565b80600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090612dc1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612db89190613402565b60405180910390fd5b5060006001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050612e0383612387565b612e0d81846123c0565b82600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b508054612e7a90613552565b6000825580601f10612e8c5750612eab565b601f016020900490600052602060002090810190612eaa9190612f34565b5b50565b828054612eba90613552565b90600052602060002090601f016020900481019282612edc5760008555612f23565b82601f10612ef557805160ff1916838001178555612f23565b82800160010185558215612f23579182015b82811115612f22578251825591602001919060010190612f07565b5b509050612f309190612f34565b5090565b5b80821115612f4d576000816000905550600101612f35565b5090565b600081359050612f60816135f3565b92915050565b600081359050612f758161360a565b92915050565b600081359050612f8a81613621565b92915050565b600081519050612f9f81613621565b92915050565b60008083601f840112612fb757600080fd5b8235905067ffffffffffffffff811115612fd057600080fd5b602083019150836001820283011115612fe857600080fd5b9250929050565b60008083601f84011261300157600080fd5b8235905067ffffffffffffffff81111561301a57600080fd5b60208301915083600182028301111561303257600080fd5b9250929050565b60008135905061304881613638565b92915050565b60006020828403121561306057600080fd5b600061306e84828501612f51565b91505092915050565b6000806040838503121561308a57600080fd5b600061309885828601612f51565b92505060206130a985828601612f51565b9150509250929050565b6000806000606084860312156130c857600080fd5b60006130d686828701612f51565b93505060206130e786828701612f51565b92505060406130f886828701613039565b9150509250925092565b60008060008060006080868803121561311a57600080fd5b600061312888828901612f51565b955050602061313988828901612f51565b945050604061314a88828901613039565b935050606086013567ffffffffffffffff81111561316757600080fd5b61317388828901612fa5565b92509250509295509295909350565b6000806040838503121561319557600080fd5b60006131a385828601612f51565b92505060206131b485828601612f66565b9150509250929050565b600080604083850312156131d157600080fd5b60006131df85828601612f51565b92505060206131f085828601613039565b9150509250929050565b6000806000806060858703121561321057600080fd5b600061321e87828801612f51565b945050602061322f87828801613039565b935050604085013567ffffffffffffffff81111561324c57600080fd5b61325887828801612fef565b925092505092959194509250565b60006020828403121561327857600080fd5b600061328684828501612f7b565b91505092915050565b6000602082840312156132a157600080fd5b60006132af84828501612f90565b91505092915050565b6000602082840312156132ca57600080fd5b60006132d884828501613039565b91505092915050565b6132ea816134ab565b82525050565b6132f9816134bd565b82525050565b600061330a8261343f565b6133148185613455565b935061332481856020860161351f565b61332d816135e2565b840191505092915050565b60006133438261344a565b61334d8185613466565b935061335d81856020860161351f565b613366816135e2565b840191505092915050565b61337a81613515565b82525050565b600060208201905061339560008301846132e1565b92915050565b60006080820190506133b060008301876132e1565b6133bd60208301866132e1565b6133ca6040830185613371565b81810360608301526133dc81846132ff565b905095945050505050565b60006020820190506133fc60008301846132f0565b92915050565b6000602082019050818103600083015261341c8184613338565b905092915050565b60006020820190506134396000830184613371565b92915050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061348282613515565b915061348d83613515565b9250828210156134a05761349f613584565b5b828203905092915050565b60006134b6826134f5565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101561353d578082015181840152602081019050613522565b8381111561354c576000848401525b50505050565b6000600282049050600182168061356a57607f821691505b6020821081141561357e5761357d6135b3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b6135fc816134ab565b811461360757600080fd5b50565b613613816134bd565b811461361e57600080fd5b50565b61362a816134c9565b811461363557600080fd5b50565b61364181613515565b811461364c57600080fd5b5056fea264697066735822122094f371d96fbb13fb5cce813bfa82ac2cb2b06244c4771671d1a77fb6b029f65c64736f6c63430008000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101425760003560e01c806370a08231116100b8578063b88d4fde1161007c578063b88d4fde14610389578063c87b56dd146103a5578063d3fc9864146103d5578063e985e9c5146103f1578063f2fde38b14610421578063f3fe3bc31461043d57610142565b806370a08231146102e3578063860d248a146103135780638da5cb5b1461033157806395d89b411461034f578063a22cb4651461036d57610142565b806323b872dd1161010a57806323b872dd146101ff5780632f745c591461021b57806342842e0e1461024b57806342966c68146102675780634f6ccce7146102835780636352211e146102b357610142565b806301ffc9a71461014757806306fdde0314610177578063081812fc14610195578063095ea7b3146101c557806318160ddd146101e1575b600080fd5b610161600480360381019061015c9190613266565b61045b565b60405161016e91906133e7565b60405180910390f35b61017f6104c2565b60405161018c9190613402565b60405180910390f35b6101af60048036038101906101aa91906132b8565b610554565b6040516101bc9190613380565b60405180910390f35b6101df60048036038101906101da91906131be565b61066f565b005b6101e9610a52565b6040516101f69190613424565b60405180910390f35b610219600480360381019061021491906130b3565b610a5f565b005b610235600480360381019061023091906131be565b610eb1565b6040516102429190613424565b60405180910390f35b610265600480360381019061026091906130b3565b610ffa565b005b610281600480360381019061027c91906132b8565b61101a565b005b61029d600480360381019061029891906132b8565b6110ef565b6040516102aa9190613424565b60405180910390f35b6102cd60048036038101906102c891906132b8565b6111bd565b6040516102da9190613380565b60405180910390f35b6102fd60048036038101906102f8919061304e565b6112a3565b60405161030a9190613424565b60405180910390f35b61031b61135d565b6040516103289190613402565b60405180910390f35b610339611396565b6040516103469190613380565b60405180910390f35b6103576113bc565b6040516103649190613402565b60405180910390f35b61038760048036038101906103829190613182565b61144e565b005b6103a3600480360381019061039e9190613102565b61154b565b005b6103bf60048036038101906103ba91906132b8565b6115a2565b6040516103cc9190613402565b60405180910390f35b6103ef60048036038101906103ea91906131fa565b611692565b005b61040b60048036038101906104069190613077565b6117b9565b60405161041891906133e7565b60405180910390f35b61043b6004803603810190610436919061304e565b61184d565b005b610445611a7f565b6040516104529190613402565b60405180910390f35b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b6060600980546104d190613552565b80601f01602080910402602001604051908101604052809291908181526020018280546104fd90613552565b801561054a5780601f1061051f5761010080835404028352916020019161054a565b820191906000526020600020905b81548152906001019060200180831161052d57829003601f168201915b5050505050905090565b600081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090610632576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106299190613402565b60405180910390fd5b506002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16915050919050565b8060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614806107685750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f3030333030330000000000000000000000000000000000000000000000000000815250906107df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d69190613402565b60405180910390fd5b5082600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3030333030320000000000000000000000000000000000000000000000000000815250906108bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b39190613402565b60405180910390fd5b5060006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f30303330303800000000000000000000000000000000000000000000000000008152509061099c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109939190613402565b60405180910390fd5b50856002600087815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550848673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050505050565b6000600580549050905090565b8060006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480610b3057503373ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80610bc15750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303034000000000000000000000000000000000000000000000000000081525090610c38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c2f9190613402565b60405180910390fd5b5082600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090610d15576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d0c9190613402565b60405180910390fd5b5060006001600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303037000000000000000000000000000000000000000000000000000081525090610df4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610deb9190613402565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303031000000000000000000000000000000000000000000000000000081525090610e9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e949190613402565b60405180910390fd5b50610ea88686611ab8565b50505050505050565b6000600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905082106040518060400160405280600681526020017f303035303037000000000000000000000000000000000000000000000000000081525090610f6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f669190613402565b60405180910390fd5b50600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610fe7577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905092915050565b61101583838360405180602001604052806000815250611b6d565b505050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f3031383030310000000000000000000000000000000000000000000000000000815250906110e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110d99190613402565b60405180910390fd5b506110ec8161213b565b50565b600060058054905082106040518060400160405280600681526020017f303035303037000000000000000000000000000000000000000000000000000081525090611170576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111679190613402565b60405180910390fd5b50600582815481106111ab577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001549050919050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f30303330303200000000000000000000000000000000000000000000000000008152509061129d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112949190613402565b60405180910390fd5b50919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f30303330303100000000000000000000000000000000000000000000000000008152509061134c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113439190613402565b60405180910390fd5b5061135682612166565b9050919050565b6040518060400160405280600681526020017f303138303032000000000000000000000000000000000000000000000000000081525081565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600a80546113cb90613552565b80601f01602080910402602001604051908101604052809291908181526020018280546113f790613552565b80156114445780601f1061141957610100808354040283529160200191611444565b820191906000526020600020905b81548152906001019060200180831161142757829003601f168201915b5050505050905090565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161153f91906133e7565b60405180910390a35050565b61159b85858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050611b6d565b5050505050565b606081600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090611680576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116779190613402565b60405180910390fd5b5061168a83612178565b915050919050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f30313830303100000000000000000000000000000000000000000000000000008152509061175a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117519190613402565b60405180910390fd5b50611765848461221d565b6117b38383838080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505061227d565b50505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303138303031000000000000000000000000000000000000000000000000000081525090611915576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161190c9190613402565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f3031383030320000000000000000000000000000000000000000000000000000815250906119be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119b59190613402565b60405180910390fd5b508073ffffffffffffffffffffffffffffffffffffffff16600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6040518060400160405280600681526020017f303138303031000000000000000000000000000000000000000000000000000081525081565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611af982612387565b611b0381836123c0565b611b0d83836123ce565b818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b8160006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690503373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161480611c3e57503373ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16145b80611ccf5750600460008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6040518060400160405280600681526020017f303033303034000000000000000000000000000000000000000000000000000081525090611d46576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d3d9190613402565b60405180910390fd5b5083600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090611e23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e1a9190613402565b60405180910390fd5b5060006001600087815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303037000000000000000000000000000000000000000000000000000081525090611f02576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ef99190613402565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303031000000000000000000000000000000000000000000000000000081525090611fab576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fa29190613402565b60405180910390fd5b50611fb68787611ab8565b611fd58773ffffffffffffffffffffffffffffffffffffffff166123dc565b156121315760008773ffffffffffffffffffffffffffffffffffffffff1663150b7a02338b8a8a6040518563ffffffff1660e01b815260040161201b949392919061339b565b602060405180830381600087803b15801561203557600080fd5b505af1158015612049573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061206d919061328f565b905063150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146040518060400160405280600681526020017f30303330303500000000000000000000000000000000000000000000000000008152509061212e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121259190613402565b60405180910390fd5b50505b5050505050505050565b61214481612427565b600b600082815260200190815260200160002060006121639190612e6e565b50565b600061217182612575565b9050919050565b6060600b6000838152602001908152602001600020805461219890613552565b80601f01602080910402602001604051908101604052809291908181526020018280546121c490613552565b80156122115780601f106121e657610100808354040283529160200191612211565b820191906000526020600020905b8154815290600101906020018083116121f457829003601f168201915b50505050509050919050565b61222782826125c1565b600581908060018154018082558091505060019003906000526020600020016000909190919091505560016005805490506122629190613477565b60066000838152602001908152602001600020819055505050565b81600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090612359576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016123509190613402565b60405180910390fd5b5081600b60008581526020019081526020016000209080519060200190612381929190612eae565b50505050565b6002600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550565b6123ca82826127af565b5050565b6123d88282612ae8565b5050565b60008060007fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a47060001b9050833f91506000801b821415801561241e5750808214155b92505050919050565b61243081612ce5565b6000600660008381526020019081526020016000205490506000600160058054905061245c9190613477565b905060006005828154811061249a577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905080600584815481106124e2577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600052602060002001819055506005805480612528577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b600190038181906000526020600020016000905590558260066000838152602001908152602001600020819055506000600660008681526020019081526020016000208190555050505050565b6000600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490509050919050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303031000000000000000000000000000000000000000000000000000081525090612669576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126609190613402565b60405180910390fd5b50600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303036000000000000000000000000000000000000000000000000000081525090612744576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161273b9190613402565b60405180910390fd5b5061274f82826123ce565b808273ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a45050565b8173ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303037000000000000000000000000000000000000000000000000000081525090612888576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161287f9190613402565b60405180910390fd5b506001600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905560006008600083815260200190815260200160002054905060006001600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490506129289190613477565b9050818114612a57576000600760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002082815481106129aa577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200154905080600760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110612a2f577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200181905550826008600083815260200190815260200160002081905550505b600760008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480612acc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b6001900381819060005260206000200160009055905550505050565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146040518060400160405280600681526020017f303033303036000000000000000000000000000000000000000000000000000081525090612bc2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bb99190613402565b60405180910390fd5b50816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600760008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002001600090919091909150556001600760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050612cca9190613477565b60086000838152602001908152602001600020819055505050565b80600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156040518060400160405280600681526020017f303033303032000000000000000000000000000000000000000000000000000081525090612dc1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612db89190613402565b60405180910390fd5b5060006001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050612e0383612387565b612e0d81846123c0565b82600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b508054612e7a90613552565b6000825580601f10612e8c5750612eab565b601f016020900490600052602060002090810190612eaa9190612f34565b5b50565b828054612eba90613552565b90600052602060002090601f016020900481019282612edc5760008555612f23565b82601f10612ef557805160ff1916838001178555612f23565b82800160010185558215612f23579182015b82811115612f22578251825591602001919060010190612f07565b5b509050612f309190612f34565b5090565b5b80821115612f4d576000816000905550600101612f35565b5090565b600081359050612f60816135f3565b92915050565b600081359050612f758161360a565b92915050565b600081359050612f8a81613621565b92915050565b600081519050612f9f81613621565b92915050565b60008083601f840112612fb757600080fd5b8235905067ffffffffffffffff811115612fd057600080fd5b602083019150836001820283011115612fe857600080fd5b9250929050565b60008083601f84011261300157600080fd5b8235905067ffffffffffffffff81111561301a57600080fd5b60208301915083600182028301111561303257600080fd5b9250929050565b60008135905061304881613638565b92915050565b60006020828403121561306057600080fd5b600061306e84828501612f51565b91505092915050565b6000806040838503121561308a57600080fd5b600061309885828601612f51565b92505060206130a985828601612f51565b9150509250929050565b6000806000606084860312156130c857600080fd5b60006130d686828701612f51565b93505060206130e786828701612f51565b92505060406130f886828701613039565b9150509250925092565b60008060008060006080868803121561311a57600080fd5b600061312888828901612f51565b955050602061313988828901612f51565b945050604061314a88828901613039565b935050606086013567ffffffffffffffff81111561316757600080fd5b61317388828901612fa5565b92509250509295509295909350565b6000806040838503121561319557600080fd5b60006131a385828601612f51565b92505060206131b485828601612f66565b9150509250929050565b600080604083850312156131d157600080fd5b60006131df85828601612f51565b92505060206131f085828601613039565b9150509250929050565b6000806000806060858703121561321057600080fd5b600061321e87828801612f51565b945050602061322f87828801613039565b935050604085013567ffffffffffffffff81111561324c57600080fd5b61325887828801612fef565b925092505092959194509250565b60006020828403121561327857600080fd5b600061328684828501612f7b565b91505092915050565b6000602082840312156132a157600080fd5b60006132af84828501612f90565b91505092915050565b6000602082840312156132ca57600080fd5b60006132d884828501613039565b91505092915050565b6132ea816134ab565b82525050565b6132f9816134bd565b82525050565b600061330a8261343f565b6133148185613455565b935061332481856020860161351f565b61332d816135e2565b840191505092915050565b60006133438261344a565b61334d8185613466565b935061335d81856020860161351f565b613366816135e2565b840191505092915050565b61337a81613515565b82525050565b600060208201905061339560008301846132e1565b92915050565b60006080820190506133b060008301876132e1565b6133bd60208301866132e1565b6133ca6040830185613371565b81810360608301526133dc81846132ff565b905095945050505050565b60006020820190506133fc60008301846132f0565b92915050565b6000602082019050818103600083015261341c8184613338565b905092915050565b60006020820190506134396000830184613371565b92915050565b600081519050919050565b600081519050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061348282613515565b915061348d83613515565b9250828210156134a05761349f613584565b5b828203905092915050565b60006134b6826134f5565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60005b8381101561353d578082015181840152602081019050613522565b8381111561354c576000848401525b50505050565b6000600282049050600182168061356a57607f821691505b6020821081141561357e5761357d6135b3565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000601f19601f8301169050919050565b6135fc816134ab565b811461360757600080fd5b50565b613613816134bd565b811461361e57600080fd5b50565b61362a816134c9565b811461363557600080fd5b50565b61364181613515565b811461364c57600080fd5b5056fea264697066735822122094f371d96fbb13fb5cce813bfa82ac2cb2b06244c4771671d1a77fb6b029f65c64736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2967:17",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "102:258:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "112:74:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "178:6:17"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "136:41:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "136:49:17"
                      }
                    ],
                    "functionName": {
                      "name": "allocateMemory",
                      "nodeType": "YulIdentifier",
                      "src": "121:14:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "121:65:17"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "112:5:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "202:5:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "209:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "195:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "195:21:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "195:21:17"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "225:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "240:5:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "247:4:17",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "236:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "236:16:17"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "229:3:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "290:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "299:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "302:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "292:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "292:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "292:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "271:3:17"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "276:6:17"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "267:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "267:16:17"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "285:3:17"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "264:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "264:25:17"
                  },
                  "nodeType": "YulIf",
                  "src": "261:2:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "337:3:17"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "342:3:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "347:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "315:21:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "315:39:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "315:39:17"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "75:3:17",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "80:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "88:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "96:5:17",
                "type": ""
              }
            ],
            "src": "7:353:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "453:215:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "502:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "511:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "514:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "504:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "504:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "504:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "481:6:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "489:4:17",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "477:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "477:17:17"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "496:3:17"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "473:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "473:27:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "466:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "466:35:17"
                  },
                  "nodeType": "YulIf",
                  "src": "463:2:17"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "527:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "547:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "541:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "541:13:17"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "531:6:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "563:99:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "635:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "643:4:17",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "631:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:17:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "650:6:17"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "658:3:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "572:58:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "572:90:17"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "563:5:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "431:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "439:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "447:5:17",
                "type": ""
              }
            ],
            "src": "380:288:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "788:538:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "834:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "843:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "846:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "836:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "836:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "836:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "809:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "818:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "805:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "805:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "830:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "801:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "801:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "798:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "860:224:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "875:38:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "899:9:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "910:1:17",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "895:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "895:17:17"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "889:5:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "889:24:17"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "879:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "960:16:17",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "969:1:17",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "972:1:17",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "962:6:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "962:12:17"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "962:12:17"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "932:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "940:18:17",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "929:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "929:30:17"
                      },
                      "nodeType": "YulIf",
                      "src": "926:2:17"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "990:84:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1046:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1057:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1042:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1042:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1066:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1000:41:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1000:74:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "990:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1094:225:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1109:39:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1133:9:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1144:2:17",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1129:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1129:18:17"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "1123:5:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1123:25:17"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1113:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1195:16:17",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1204:1:17",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1207:1:17",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1197:6:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1197:12:17"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1197:12:17"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1167:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1175:18:17",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1164:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1164:30:17"
                      },
                      "nodeType": "YulIf",
                      "src": "1161:2:17"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1225:84:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1281:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1292:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1277:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1277:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1301:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "1235:41:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1235:74:17"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1225:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "750:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "761:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "773:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "781:6:17",
                "type": ""
              }
            ],
            "src": "674:652:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1372:243:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1382:19:17",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1398:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1392:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1392:9:17"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1382:6:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1410:35:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1432:6:17"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "1440:4:17"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1428:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1428:17:17"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1414:10:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1556:22:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1558:16:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1558:18:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1558:18:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1499:10:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1511:18:17",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1496:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1496:34:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1535:10:17"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1547:6:17"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1532:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1532:22:17"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1493:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1493:62:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1490:2:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1594:2:17",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1598:10:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1587:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1587:22:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1587:22:17"
                }
              ]
            },
            "name": "allocateMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "1356:4:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1365:6:17",
                "type": ""
              }
            ],
            "src": "1332:283:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1688:265:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1793:22:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1795:16:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1795:18:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1795:18:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1765:6:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1773:18:17",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1762:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1762:30:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1759:2:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1845:41:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1861:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1869:4:17",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1857:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1857:17:17"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1880:4:17",
                            "type": "",
                            "value": "0x1f"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "1876:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1876:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1853:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1853:33:17"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "1845:4:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1923:23:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "1935:4:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1941:4:17",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1931:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1931:15:17"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "1923:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1672:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "1683:4:17",
                "type": ""
              }
            ],
            "src": "1621:332:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2008:258:17",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2018:10:17",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2027:1:17",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2022:1:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2087:63:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2112:3:17"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "2117:1:17"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2108:3:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2108:11:17"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "2131:3:17"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2136:1:17"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2127:3:17"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2127:11:17"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2121:5:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2121:18:17"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2101:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2101:39:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2101:39:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2048:1:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2051:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2045:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2045:13:17"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2059:19:17",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2061:15:17",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2070:1:17"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2073:2:17",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2066:3:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2066:10:17"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2061:1:17"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2041:3:17",
                    "statements": []
                  },
                  "src": "2037:113:17"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2184:76:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2234:3:17"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "2239:6:17"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2230:3:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2230:16:17"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2248:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2223:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2223:27:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2223:27:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2165:1:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2168:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2162:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2162:13:17"
                  },
                  "nodeType": "YulIf",
                  "src": "2159:2:17"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "1990:3:17",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "1995:3:17",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2000:6:17",
                "type": ""
              }
            ],
            "src": "1959:307:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2323:269:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2333:22:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2347:4:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2353:1:17",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "2343:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2343:12:17"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "2333:6:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2364:38:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "2394:4:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2400:1:17",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2390:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2390:12:17"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "2368:18:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2441:51:17",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2455:27:17",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "2469:6:17"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2477:4:17",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "2465:3:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2465:17:17"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2455:6:17"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2421:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2414:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2414:26:17"
                  },
                  "nodeType": "YulIf",
                  "src": "2411:2:17"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2544:42:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "2558:16:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2558:18:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2558:18:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "2508:18:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2531:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2539:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2528:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2528:14:17"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "2505:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2505:38:17"
                  },
                  "nodeType": "YulIf",
                  "src": "2502:2:17"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "2307:4:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2316:6:17",
                "type": ""
              }
            ],
            "src": "2272:320:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2626:152:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2643:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2646:77:17",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2636:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2636:88:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2636:88:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2740:1:17",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2743:4:17",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2733:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2733:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2733:15:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2764:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2767:4:17",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2757:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2757:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2757:15:17"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "2598:180:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2812:152:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2829:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2832:77:17",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2822:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2822:88:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2822:88:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2926:1:17",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2929:4:17",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2919:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2919:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2919:15:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2950:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2953:4:17",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2943:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2943:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2943:15:17"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "2784:180:17"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocateMemory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert(0, 0) }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocateMemory(size) -> memPtr {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        // round up\n        size := and(add(length, 0x1f), not(0x1f))\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n}\n",
      "id": 17,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:11554:17",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:87:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "69:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "91:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "78:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "78:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "69:5:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "134:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "107:26:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "107:33:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "107:33:17"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "37:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "45:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:17",
                "type": ""
              }
            ],
            "src": "7:139:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "201:84:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "211:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "233:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "220:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "220:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "211:5:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "273:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "249:23:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "249:30:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "249:30:17"
                }
              ]
            },
            "name": "abi_decode_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "179:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "187:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "195:5:17",
                "type": ""
              }
            ],
            "src": "152:133:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "342:86:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "352:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "374:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "361:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "361:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "352:5:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "416:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "390:25:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "390:32:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "390:32:17"
                }
              ]
            },
            "name": "abi_decode_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "320:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "328:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "336:5:17",
                "type": ""
              }
            ],
            "src": "291:137:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "496:79:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "506:22:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "521:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "515:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "515:13:17"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "506:5:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "563:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bytes4",
                      "nodeType": "YulIdentifier",
                      "src": "537:25:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "537:32:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "537:32:17"
                }
              ]
            },
            "name": "abi_decode_t_bytes4_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "474:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "482:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "490:5:17",
                "type": ""
              }
            ],
            "src": "434:141:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "668:277:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "717:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "726:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "729:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "719:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "719:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "719:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "696:6:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "704:4:17",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "692:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "692:17:17"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "711:3:17"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "688:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "688:27:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "681:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "681:35:17"
                  },
                  "nodeType": "YulIf",
                  "src": "678:2:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "742:30:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "765:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "752:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "752:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "742:6:17"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "815:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "824:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "827:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "817:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "817:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "817:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "787:6:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "795:18:17",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "784:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "784:30:17"
                  },
                  "nodeType": "YulIf",
                  "src": "781:2:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "840:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "856:6:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "864:4:17",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "852:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "852:17:17"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "840:8:17"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "923:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "932:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "935:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "925:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "925:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "925:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "arrayPos",
                            "nodeType": "YulIdentifier",
                            "src": "888:8:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "902:6:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "910:4:17",
                                "type": "",
                                "value": "0x01"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "898:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "898:17:17"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "884:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "884:32:17"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "918:3:17"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "881:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "881:41:17"
                  },
                  "nodeType": "YulIf",
                  "src": "878:2:17"
                }
              ]
            },
            "name": "abi_decode_t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "635:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "643:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "651:8:17",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "661:6:17",
                "type": ""
              }
            ],
            "src": "594:351:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1040:277:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1089:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1098:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1101:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1091:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1091:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1091:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1068:6:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1076:4:17",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1064:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1064:17:17"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "1083:3:17"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1060:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1060:27:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1053:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1053:35:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1050:2:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1114:30:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1137:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1124:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1124:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1114:6:17"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1187:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1196:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1199:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1189:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1189:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1189:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1159:6:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1167:18:17",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1156:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1156:30:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1153:2:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1212:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1228:6:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1236:4:17",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1224:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1224:17:17"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "1212:8:17"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1295:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1304:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1307:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1297:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1297:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1297:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "arrayPos",
                            "nodeType": "YulIdentifier",
                            "src": "1260:8:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1274:6:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1282:4:17",
                                "type": "",
                                "value": "0x01"
                              }
                            ],
                            "functionName": {
                              "name": "mul",
                              "nodeType": "YulIdentifier",
                              "src": "1270:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1270:17:17"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1256:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1256:32:17"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1290:3:17"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1253:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1253:41:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1250:2:17"
                }
              ]
            },
            "name": "abi_decode_t_string_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1007:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1015:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "1023:8:17",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1033:6:17",
                "type": ""
              }
            ],
            "src": "965:352:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1375:87:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1385:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1407:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1394:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1394:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1385:5:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1450:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "1423:26:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1423:33:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1423:33:17"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1353:6:17",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1361:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1369:5:17",
                "type": ""
              }
            ],
            "src": "1323:139:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1534:196:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1580:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1589:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1592:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1582:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1582:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1582:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1555:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1564:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1551:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1551:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1576:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1547:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1547:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1544:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1606:117:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1621:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1635:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1625:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1650:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1685:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1696:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1681:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1681:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1705:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1660:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1660:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1650:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1504:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1515:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1527:6:17",
                "type": ""
              }
            ],
            "src": "1468:262:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1819:324:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1865:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1874:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1877:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1867:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1867:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1867:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1840:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1849:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1836:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1836:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1861:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1832:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1832:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1829:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1891:117:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1906:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1920:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1910:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1935:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1970:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1981:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1966:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1966:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1990:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1945:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1945:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1935:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2018:118:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2033:16:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2047:2:17",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2037:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2063:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2098:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2109:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2094:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2094:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2118:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2073:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2073:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2063:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1781:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1792:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1804:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1812:6:17",
                "type": ""
              }
            ],
            "src": "1736:407:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2249:452:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2295:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2304:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2307:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2297:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2297:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2297:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2270:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2279:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2266:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2266:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2291:2:17",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2262:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2262:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "2259:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2321:117:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2336:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2350:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2340:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2365:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2400:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2411:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2396:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2396:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2420:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2375:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2375:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2365:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2448:118:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2463:16:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2477:2:17",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2467:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2493:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2528:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2539:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2524:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2524:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2548:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2503:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2503:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2493:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2576:118:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2591:16:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2605:2:17",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2595:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2621:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2656:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2667:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2652:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2652:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2676:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2631:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2631:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "2621:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2203:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2214:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2226:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2234:6:17",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2242:6:17",
                "type": ""
              }
            ],
            "src": "2149:552:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2843:693:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2890:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2899:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2902:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2892:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2892:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2892:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2864:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2873:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2860:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2860:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2885:3:17",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2856:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2856:33:17"
                  },
                  "nodeType": "YulIf",
                  "src": "2853:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2916:117:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2931:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2945:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2935:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2960:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2995:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3006:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2991:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2991:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3015:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2970:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2970:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2960:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3043:118:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3058:16:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3072:2:17",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3062:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3088:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3123:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3134:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3119:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3119:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3143:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3098:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3098:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3088:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3171:118:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3186:16:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3200:2:17",
                        "type": "",
                        "value": "64"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3190:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3216:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3251:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3262:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3247:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3247:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3271:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "3226:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3226:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "3216:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3299:230:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3314:46:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3345:9:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3356:2:17",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3341:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3341:18:17"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3328:12:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3328:32:17"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3318:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3407:16:17",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3416:1:17",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3419:1:17",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3409:6:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3409:12:17"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3409:12:17"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3379:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3387:18:17",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3376:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3376:30:17"
                      },
                      "nodeType": "YulIf",
                      "src": "3373:2:17"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3437:82:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3491:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3502:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3487:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3487:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3511:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes_calldata_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "3455:31:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3455:64:17"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "3437:6:17"
                        },
                        {
                          "name": "value4",
                          "nodeType": "YulIdentifier",
                          "src": "3445:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2781:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2792:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2804:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2812:6:17",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2820:6:17",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2828:6:17",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2836:6:17",
                "type": ""
              }
            ],
            "src": "2707:829:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3622:321:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3668:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3677:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3680:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3670:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3670:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3670:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3643:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3652:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3639:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3639:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3664:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3635:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3635:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "3632:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3694:117:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3709:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3723:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3713:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3738:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3773:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3784:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3769:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3769:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3793:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "3748:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3748:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3738:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3821:115:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3836:16:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3850:2:17",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3840:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3866:60:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3898:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3909:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3894:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3894:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3918:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "3876:17:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3876:50:17"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3866:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3584:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3595:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3607:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3615:6:17",
                "type": ""
              }
            ],
            "src": "3542:401:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4032:324:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4078:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4087:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4090:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4080:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4080:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4080:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4053:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4062:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4049:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4049:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4074:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4045:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4045:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "4042:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4104:117:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4119:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4133:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4123:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4148:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4183:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4194:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4179:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4179:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4203:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4158:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4158:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4148:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4231:118:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4246:16:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4260:2:17",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4250:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4276:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4311:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4322:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4307:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4307:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4331:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4286:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4286:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4276:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3994:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4005:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4017:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4025:6:17",
                "type": ""
              }
            ],
            "src": "3949:407:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4482:565:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4528:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4537:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4540:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4530:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4530:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4530:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4503:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4512:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4499:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4499:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4524:2:17",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4495:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4495:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "4492:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4554:117:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4569:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4583:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4573:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4598:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4633:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4644:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4629:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4629:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4653:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "4608:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4608:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4598:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4681:118:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4696:16:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4710:2:17",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4700:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4726:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4761:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4772:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4757:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4757:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4781:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4736:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4736:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4726:6:17"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4809:231:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4824:46:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4855:9:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4866:2:17",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4851:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4851:18:17"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "4838:12:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4838:32:17"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4828:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4917:16:17",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4926:1:17",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4929:1:17",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "4919:6:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4919:12:17"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4919:12:17"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "4889:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4897:18:17",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4886:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4886:30:17"
                      },
                      "nodeType": "YulIf",
                      "src": "4883:2:17"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4947:83:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5002:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5013:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4998:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4998:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5022:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_calldata_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "4965:32:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4965:65:17"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "4947:6:17"
                        },
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "4955:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256t_string_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4428:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4439:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4451:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4459:6:17",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4467:6:17",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4475:6:17",
                "type": ""
              }
            ],
            "src": "4362:685:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5118:195:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5164:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5173:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5176:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5166:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5166:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5166:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5139:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5148:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5135:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5135:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5160:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5131:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5131:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "5128:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5190:116:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5205:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5219:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5209:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5234:62:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5268:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5279:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5264:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5264:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5288:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes4",
                          "nodeType": "YulIdentifier",
                          "src": "5244:19:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5244:52:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5234:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5088:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5099:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5111:6:17",
                "type": ""
              }
            ],
            "src": "5053:260:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5395:206:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5441:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5450:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5453:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5443:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5443:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5443:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5416:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5425:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5412:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5412:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5437:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5408:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5408:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "5405:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5467:127:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5482:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5496:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5486:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5511:73:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5556:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5567:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5552:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5552:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5576:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bytes4_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "5521:30:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5521:63:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5511:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes4_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5365:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5376:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5388:6:17",
                "type": ""
              }
            ],
            "src": "5319:282:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5673:196:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5719:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5728:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5731:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5721:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5721:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5721:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5694:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5703:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5690:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5690:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5715:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5686:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5686:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "5683:2:17"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5745:117:17",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5760:15:17",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5774:1:17",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5764:6:17",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5789:63:17",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5824:9:17"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5835:6:17"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5820:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5820:22:17"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5844:7:17"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5799:20:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5799:53:17"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5789:6:17"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5643:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5654:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5666:6:17",
                "type": ""
              }
            ],
            "src": "5607:262:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5940:53:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5957:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5980:5:17"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5962:17:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5962:24:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5950:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5950:37:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5950:37:17"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5928:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5935:3:17",
                "type": ""
              }
            ],
            "src": "5875:118:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6058:50:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6075:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6095:5:17"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "6080:14:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6080:21:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6068:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6068:34:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6068:34:17"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6046:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6053:3:17",
                "type": ""
              }
            ],
            "src": "5999:109:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6204:270:17",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6214:52:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6260:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_bytes_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "6228:31:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6228:38:17"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6218:6:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6275:77:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6340:3:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6345:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6282:57:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6282:70:17"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6275:3:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6387:5:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6394:4:17",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6383:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6383:16:17"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6401:3:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6406:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "6361:21:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6361:52:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6361:52:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6422:46:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6433:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6460:6:17"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "6438:21:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6438:29:17"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6429:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6429:39:17"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6422:3:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6185:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6192:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6200:3:17",
                "type": ""
              }
            ],
            "src": "6114:360:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6572:272:17",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6582:53:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "6629:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "6596:32:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6596:39:17"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "6586:6:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6644:78:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6710:3:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6715:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6651:58:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6651:71:17"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "6644:3:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6757:5:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6764:4:17",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6753:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6753:16:17"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6771:3:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "6776:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "6731:21:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6731:52:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6731:52:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6792:46:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6803:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "6830:6:17"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "6808:21:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6808:29:17"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6799:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6799:39:17"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6792:3:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6553:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6560:3:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6568:3:17",
                "type": ""
              }
            ],
            "src": "6480:364:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6915:53:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6932:3:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6955:5:17"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "6937:17:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6937:24:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6925:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6925:37:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6925:37:17"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6903:5:17",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6910:3:17",
                "type": ""
              }
            ],
            "src": "6850:118:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7072:124:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7082:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7094:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7105:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7090:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7090:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7082:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7162:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7175:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7186:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7171:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7171:17:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7118:43:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7118:71:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7118:71:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7044:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7056:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7067:4:17",
                "type": ""
              }
            ],
            "src": "6974:222:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7402:440:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7412:27:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7424:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7435:3:17",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7420:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7420:19:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7412:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7493:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7506:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7517:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7502:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7502:17:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7449:43:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7449:71:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7449:71:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7574:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7587:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7598:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7583:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7583:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7530:43:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7530:72:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7530:72:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7656:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7669:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7680:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7665:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7665:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7612:43:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7612:72:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7612:72:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7705:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7716:2:17",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7701:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7701:18:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "7725:4:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7731:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7721:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7721:20:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7694:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7694:48:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7694:48:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7751:84:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "7821:6:17"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "7830:4:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7759:61:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7759:76:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7751:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7350:9:17",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7362:6:17",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7370:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7378:6:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7386:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7397:4:17",
                "type": ""
              }
            ],
            "src": "7202:640:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7940:118:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7950:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7962:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7973:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7958:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7958:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7950:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8024:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8037:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8048:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8033:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8033:17:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7986:37:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7986:65:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7986:65:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7912:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7924:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7935:4:17",
                "type": ""
              }
            ],
            "src": "7848:210:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8182:195:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8192:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8204:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8215:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8200:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8200:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8192:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8239:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8250:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8235:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8235:17:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8258:4:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8264:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8254:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8254:20:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8228:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8228:47:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8228:47:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8284:86:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8356:6:17"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8365:4:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8292:63:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8292:78:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8284:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8154:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8166:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8177:4:17",
                "type": ""
              }
            ],
            "src": "8064:313:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8481:124:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8491:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8503:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8514:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8499:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8499:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8491:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8571:6:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8584:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8595:1:17",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8580:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8580:17:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8527:43:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8527:71:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8527:71:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8453:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8465:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8476:4:17",
                "type": ""
              }
            ],
            "src": "8383:222:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8669:40:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8680:22:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8696:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8690:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8690:12:17"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "8680:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8652:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8662:6:17",
                "type": ""
              }
            ],
            "src": "8611:98:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8774:40:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8785:22:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8801:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8795:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8795:12:17"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "8785:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8757:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8767:6:17",
                "type": ""
              }
            ],
            "src": "8715:99:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8915:73:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8932:3:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8937:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8925:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8925:19:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8925:19:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8953:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8972:3:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8977:4:17",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8968:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8968:14:17"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "8953:11:17"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8887:3:17",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "8892:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "8903:11:17",
                "type": ""
              }
            ],
            "src": "8820:168:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9090:73:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9107:3:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9112:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9100:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9100:19:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9100:19:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9128:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9147:3:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9152:4:17",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9143:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9143:14:17"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "9128:11:17"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9062:3:17",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9067:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "9078:11:17",
                "type": ""
              }
            ],
            "src": "8994:169:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9214:146:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9224:25:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9247:1:17"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9229:17:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9229:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "9224:1:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9258:25:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9281:1:17"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "9263:17:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9263:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "9258:1:17"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9305:22:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9307:16:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9307:18:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9307:18:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9299:1:17"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9302:1:17"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "9296:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9296:8:17"
                  },
                  "nodeType": "YulIf",
                  "src": "9293:2:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9337:17:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "9349:1:17"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "9352:1:17"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "9345:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9345:9:17"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "9337:4:17"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "9200:1:17",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "9203:1:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "9209:4:17",
                "type": ""
              }
            ],
            "src": "9169:191:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9411:51:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9421:35:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9450:5:17"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "9432:17:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9432:24:17"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9421:7:17"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9393:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9403:7:17",
                "type": ""
              }
            ],
            "src": "9366:96:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9510:48:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9520:32:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "9545:5:17"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "9538:6:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9538:13:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9531:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9531:21:17"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9520:7:17"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9492:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9502:7:17",
                "type": ""
              }
            ],
            "src": "9468:90:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9608:105:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9618:89:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9633:5:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9640:66:17",
                        "type": "",
                        "value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9629:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9629:78:17"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9618:7:17"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9590:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9600:7:17",
                "type": ""
              }
            ],
            "src": "9564:149:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9764:81:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9774:65:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9789:5:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9796:42:17",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "9785:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9785:54:17"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9774:7:17"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9746:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9756:7:17",
                "type": ""
              }
            ],
            "src": "9719:126:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9896:32:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9906:16:17",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9917:5:17"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "9906:7:17"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "9878:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "9888:7:17",
                "type": ""
              }
            ],
            "src": "9851:77:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9983:258:17",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9993:10:17",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "10002:1:17",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "9997:1:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10062:63:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "10087:3:17"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "10092:1:17"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "10083:3:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10083:11:17"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "10106:3:17"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "10111:1:17"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "10102:3:17"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "10102:11:17"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "10096:5:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10096:18:17"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10076:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10076:39:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10076:39:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "10023:1:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10026:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "10020:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10020:13:17"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "10034:19:17",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10036:15:17",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "10045:1:17"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10048:2:17",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "10041:3:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10041:10:17"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "10036:1:17"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "10016:3:17",
                    "statements": []
                  },
                  "src": "10012:113:17"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10159:76:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "10209:3:17"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "10214:6:17"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "10205:3:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "10205:16:17"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10223:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "10198:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10198:27:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10198:27:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "10140:1:17"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "10143:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "10137:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10137:13:17"
                  },
                  "nodeType": "YulIf",
                  "src": "10134:2:17"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "9965:3:17",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "9970:3:17",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "9975:6:17",
                "type": ""
              }
            ],
            "src": "9934:307:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10298:269:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10308:22:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "10322:4:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10328:1:17",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "10318:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10318:12:17"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "10308:6:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "10339:38:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "10369:4:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10375:1:17",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "10365:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10365:12:17"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "10343:18:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10416:51:17",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "10430:27:17",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "10444:6:17"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "10452:4:17",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "10440:3:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10440:17:17"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "10430:6:17"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "10396:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "10389:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10389:26:17"
                  },
                  "nodeType": "YulIf",
                  "src": "10386:2:17"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "10519:42:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "10533:16:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "10533:18:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "10533:18:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "10483:18:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "10506:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10514:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "10503:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10503:14:17"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "10480:2:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10480:38:17"
                  },
                  "nodeType": "YulIf",
                  "src": "10477:2:17"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "10282:4:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "10291:6:17",
                "type": ""
              }
            ],
            "src": "10247:320:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10601:152:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10618:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10621:77:17",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10611:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10611:88:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10611:88:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10715:1:17",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10718:4:17",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10708:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10708:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10708:15:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10739:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10742:4:17",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10732:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10732:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10732:15:17"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "10573:180:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10787:152:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10804:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10807:77:17",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10797:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10797:88:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10797:88:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10901:1:17",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10904:4:17",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10894:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10894:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10894:15:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10925:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10928:4:17",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "10918:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10918:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10918:15:17"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "10759:180:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10993:54:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11003:38:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11021:5:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11028:2:17",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11017:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11017:14:17"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11037:2:17",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "11033:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11033:7:17"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "11013:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11013:28:17"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "11003:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "10976:5:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "10986:6:17",
                "type": ""
              }
            ],
            "src": "10945:102:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11096:79:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11153:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11162:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11165:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11155:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11155:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11155:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11119:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11144:5:17"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "11126:17:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11126:24:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11116:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11116:35:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11109:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11109:43:17"
                  },
                  "nodeType": "YulIf",
                  "src": "11106:2:17"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11089:5:17",
                "type": ""
              }
            ],
            "src": "11053:122:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11221:76:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11275:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11284:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11287:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11277:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11277:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11277:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11244:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11266:5:17"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "11251:14:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11251:21:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11241:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11241:32:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11234:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11234:40:17"
                  },
                  "nodeType": "YulIf",
                  "src": "11231:2:17"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11214:5:17",
                "type": ""
              }
            ],
            "src": "11181:116:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11345:78:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11401:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11410:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11413:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11403:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11403:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11403:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11368:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11392:5:17"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bytes4",
                              "nodeType": "YulIdentifier",
                              "src": "11375:16:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11375:23:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11365:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11365:34:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11358:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11358:42:17"
                  },
                  "nodeType": "YulIf",
                  "src": "11355:2:17"
                }
              ]
            },
            "name": "validator_revert_t_bytes4",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11338:5:17",
                "type": ""
              }
            ],
            "src": "11303:120:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11472:79:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11529:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11538:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11541:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11531:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11531:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11531:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11495:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11520:5:17"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "11502:17:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11502:24:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11492:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11492:35:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11485:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11485:43:17"
                  },
                  "nodeType": "YulIf",
                  "src": "11482:2:17"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11465:5:17",
                "type": ""
              }
            ],
            "src": "11429:122:17"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert(0, 0) }\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value3, value4 := abi_decode_t_bytes_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n\n            value2, value3 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 17,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "304:3712:3:-:0;;;573:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;485:4:16;451:19;:31;471:10;451:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;2917:4:13;2883:19;:31;2903:10;2883:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;1086:4:11;1052:19;:31;1072:10;1052:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;778:4:12;744:19;:31;764:10;744:31;;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;1072:10:6;1064:5;;:18;;;;;;;;;;;;;;;;;;664:5:3;654:7;:15;;;;;;;;;;;;:::i;:::-;;688:7;676:9;:19;;;;;;;;;;;;:::i;:::-;;573:128;;304:3712;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:353:17:-;;121:65;136:49;178:6;136:49;:::i;:::-;121:65;:::i;:::-;112:74;;209:6;202:5;195:21;247:4;240:5;236:16;285:3;276:6;271:3;267:16;264:25;261:2;;;302:1;299;292:12;261:2;315:39;347:6;342:3;337;315:39;:::i;:::-;102:258;;;;;;:::o;380:288::-;;496:3;489:4;481:6;477:17;473:27;463:2;;514:1;511;504:12;463:2;547:6;541:13;572:90;658:3;650:6;643:4;635:6;631:17;572:90;:::i;:::-;563:99;;453:215;;;;;:::o;674:652::-;;;830:2;818:9;809:7;805:23;801:32;798:2;;;846:1;843;836:12;798:2;910:1;899:9;895:17;889:24;940:18;932:6;929:30;926:2;;;972:1;969;962:12;926:2;1000:74;1066:7;1057:6;1046:9;1042:22;1000:74;:::i;:::-;990:84;;860:224;1144:2;1133:9;1129:18;1123:25;1175:18;1167:6;1164:30;1161:2;;;1207:1;1204;1197:12;1161:2;1235:74;1301:7;1292:6;1281:9;1277:22;1235:74;:::i;:::-;1225:84;;1094:225;788:538;;;;;:::o;1332:283::-;;1398:2;1392:9;1382:19;;1440:4;1432:6;1428:17;1547:6;1535:10;1532:22;1511:18;1499:10;1496:34;1493:62;1490:2;;;1558:18;;:::i;:::-;1490:2;1598:10;1594:2;1587:22;1372:243;;;;:::o;1621:332::-;;1773:18;1765:6;1762:30;1759:2;;;1795:18;;:::i;:::-;1759:2;1880:4;1876:9;1869:4;1861:6;1857:17;1853:33;1845:41;;1941:4;1935;1931:15;1923:23;;1688:265;;;:::o;1959:307::-;2027:1;2037:113;2051:6;2048:1;2045:13;2037:113;;;2136:1;2131:3;2127:11;2121:18;2117:1;2112:3;2108:11;2101:39;2073:2;2070:1;2066:10;2061:15;;2037:113;;;2168:6;2165:1;2162:13;2159:2;;;2248:1;2239:6;2234:3;2230:16;2223:27;2159:2;2008:258;;;;:::o;2272:320::-;;2353:1;2347:4;2343:12;2333:22;;2400:1;2394:4;2390:12;2421:18;2411:2;;2477:4;2469:6;2465:17;2455:27;;2411:2;2539;2531:6;2528:14;2508:18;2505:38;2502:2;;;2558:18;;:::i;:::-;2502:2;2323:269;;;;:::o;2598:180::-;2646:77;2643:1;2636:88;2743:4;2740:1;2733:15;2767:4;2764:1;2757:15;2784:180;2832:77;2829:1;2822:88;2929:4;2926:1;2919:15;2953:4;2950:1;2943:15;304:3712:3;;;;;;;",
  "deployedSourceMap": "304:3712:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;715:172:16;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;933:120:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8175:183:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5960:352;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1227:120:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5186:353:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1924:251:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:179:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1232:108:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1488:199:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7723:208:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7249:204;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;488:65:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;608:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1169:128:12;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6723:232:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3811:209;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1450:183:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;925:199:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;8627:192:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1433:238:6;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;432:51;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;715:172:16;825:4;848:19;:33;868:12;848:33;;;;;;;;;;;;;;;;;;;;;;;;;;;841:40;;715:172;;;:::o;933:120:12:-;1001:19;1040:7;1032:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;933:120;:::o;8175:183:13:-;8304:7;8280:8;2774:1;2743:33;;:9;:19;2753:8;2743:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2778:13;;;;;;;;;;;;;;;;;2735:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;8330:12:::1;:22;8343:8;8330:22;;;;;;;;;;;;;;;;;;;;;8323:29;;8175:183:::0;;;;:::o;5960:352::-;6073:8;1927:18;1948:9;:19;1958:8;1948:19;;;;;;;;;;;;;;;;;;;;;1927:40;;2004:10;1990:24;;:10;:24;;;:68;;;;2018:16;:28;2035:10;2018:28;;;;;;;;;;;;;;;:40;2047:10;2018:40;;;;;;;;;;;;;;;;;;;;;;;;;1990:68;2067:21;;;;;;;;;;;;;;;;;1974:121;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6101:8:::1;2774:1;2743:33;;:9;:19;2753:8;2743:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2778:13;;;;;;;;;;;;;;;;::::0;2735:57:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6121:18:::2;6142:9;:19;6152:8;6142:19;;;;;;;;;;;;;;;;;;;;;6121:40;;6189:10;6176:23;;:9;:23;;;;6201:8;;;;;;;;;;;;;;;;::::0;6168:42:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;6244:9;6219:12;:22;6232:8;6219:22;;;;;;;;;;;;:34;;;;;;;;;;;;;;;;;;6297:8;6286:9;6265:41;;6274:10;6265:41;;;;;;;;;;;;2799:1;2102::::1;5960:352:::0;;;;:::o;1227:120:11:-;1302:7;1328:6;:13;;;;1321:20;;1227:120;:::o;5186:353:13:-;5319:8;2307:18;2328:9;:19;2338:8;2328:19;;;;;;;;;;;;;;;;;;;;;2307:40;;2384:10;2370:24;;:10;:24;;;:71;;;;2431:10;2405:36;;:12;:22;2418:8;2405:22;;;;;;;;;;;;;;;;;;;;;:36;;;2370:71;:122;;;;2452:16;:28;2469:10;2452:28;;;;;;;;;;;;;;;:40;2481:10;2452:40;;;;;;;;;;;;;;;;;;;;;;;;;2370:122;2501:30;;;;;;;;;;;;;;;;;2354:184;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5347:8:::1;2774:1;2743:33;;:9;:19;2753:8;2743:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2778:13;;;;;;;;;;;;;;;;::::0;2735:57:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5367:18:::2;5388:9;:19;5398:8;5388:19;;;;;;;;;;;;;;;;;;;;;5367:40;;5436:5;5422:19;;:10;:19;;;5443:9;;;;;;;;;;;;;;;;::::0;5414:39:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5483:1;5468:17;;:3;:17;;;;5487:12;;;;;;;;;;;;;;;;::::0;5460:40:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5509:24;5519:3;5524:8;5509:9;:24::i;:::-;2799:1;2545::::1;5186:353:::0;;;;;:::o;1924:251:11:-;2052:7;2088:10;:18;2099:6;2088:18;;;;;;;;;;;;;;;:25;;;;2079:6;:34;2115:13;;;;;;;;;;;;;;;;;2071:58;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;2143:10;:18;2154:6;2143:18;;;;;;;;;;;;;;;2162:6;2143:26;;;;;;;;;;;;;;;;;;;;;;;;2136:33;;1924:251;;;;:::o;4431:179:13:-;4561:43;4579:5;4586:3;4591:8;4561:43;;;;;;;;;;;;:17;:43::i;:::-;4431:179;;;:::o;1232:108:3:-;1226:5:6;;;;;;;;;;;1212:19;;:10;:19;;;1233:17;;;;;;;;;;;;;;;;;1204:47;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1313:21:3::1;1325:8;1313:11;:21::i;:::-;1232:108:::0;:::o;1488:199:11:-;1588:7;1624:6;:13;;;;1615:6;:22;1639:13;;;;;;;;;;;;;;;;;1607:46;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1667:6;1674;1667:14;;;;;;;;;;;;;;;;;;;;;;;;1660:21;;1488:199;;;:::o;7723:208:13:-;7820:14;7855:9;:19;7865:8;7855:19;;;;;;;;;;;;;;;;;;;;;7846:28;;7907:1;7889:20;;:6;:20;;;;7911:13;;;;;;;;;;;;;;;;;7881:44;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;7723:208;;;:::o;7249:204::-;7346:7;7391:1;7373:20;;:6;:20;;;;7395:12;;;;;;;;;;;;;;;;;7365:43;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;7422:25;7440:6;7422:17;:25::i;:::-;7415:32;;7249:204;;;:::o;488:65:6:-;;;;;;;;;;;;;;;;;;;:::o;608:20::-;;;;;;;;;;;;;:::o;1169:128:12:-;1239:21;1282:9;1272:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1169:128;:::o;6723:232:13:-;6880:9;6838:16;:28;6855:10;6838:28;;;;;;;;;;;;;;;:39;6867:9;6838:39;;;;;;;;;;;;;;;;:51;;;;;;;;;;;;;;;;;;6928:9;6901:48;;6916:10;6901:48;;;6939:9;6901:48;;;;;;:::i;:::-;;;;;;;;6723:232;;:::o;3811:209::-;3968:46;3986:5;3993:3;3998:8;4008:5;;3968:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:17;:46::i;:::-;3811:209;;;;;:::o;1450:183:12:-;1576:13;1552:8;2774:1:13;2743:33;;:9;:19;2753:8;2743:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2778:13;;;;;;;;;;;;;;;;;2735:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1608:19:12::1;1618:8;1608:9;:19::i;:::-;1601:26;;1450:183:::0;;;;:::o;925:199:3:-;1226:5:6;;;;;;;;;;;1212:19;;:10;:19;;;1233:17;;;;;;;;;;;;;;;;;1204:47;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1051:26:3::1;1063:3;1068:8;1051:11;:26::i;:::-;1084:34;1103:8;1113:4;;1084:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:18;:34::i;:::-;925:199:::0;;;;:::o;8627:192:13:-;8755:4;8778:16;:24;8795:6;8778:24;;;;;;;;;;;;;;;:35;8803:9;8778:35;;;;;;;;;;;;;;;;;;;;;;;;;8771:42;;8627:192;;;;:::o;1433:238:6:-;1226:5;;;;;;;;;;;1212:19;;:10;:19;;;1233:17;;;;;;;;;;;;;;;;;1204:47;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1555:1:::1;1534:23;;:9;:23;;;;1559:31;;;;;;;;;;;;;;;;::::0;1526:65:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;1631:9;1603:38;;1624:5;;;;;;;;;;;1603:38;;;;;;;;;;;;1656:9;1648:5;;:17;;;;;;;;;;;;;;;;;;1433:238:::0;:::o;432:51::-;;;;;;;;;;;;;;;;;;;:::o;9010:288:13:-;9112:12;9127:9;:19;9137:8;9127:19;;;;;;;;;;;;;;;;;;;;;9112:34;;9153:24;9168:8;9153:14;:24::i;:::-;9186:30;9201:4;9207:8;9186:14;:30::i;:::-;9223:26;9235:3;9240:8;9223:11;:26::i;:::-;9283:8;9278:3;9263:29;;9272:4;9263:29;;;;;;;;;;;;9010:288;;;:::o;12426:590::-;12574:8;2307:18;2328:9;:19;2338:8;2328:19;;;;;;;;;;;;;;;;;;;;;2307:40;;2384:10;2370:24;;:10;:24;;;:71;;;;2431:10;2405:36;;:12;:22;2418:8;2405:22;;;;;;;;;;;;;;;;;;;;;:36;;;2370:71;:122;;;;2452:16;:28;2469:10;2452:28;;;;;;;;;;;;;;;:40;2481:10;2452:40;;;;;;;;;;;;;;;;;;;;;;;;;2370:122;2501:30;;;;;;;;;;;;;;;;;2354:184;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12602:8:::1;2774:1;2743:33;;:9;:19;2753:8;2743:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2778:13;;;;;;;;;;;;;;;;::::0;2735:57:::1;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12622:18:::2;12643:9;:19;12653:8;12643:19;;;;;;;;;;;;;;;;;;;;;12622:40;;12691:5;12677:19;;:10;:19;;;12698:9;;;;;;;;;;;;;;;;::::0;12669:39:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12738:1;12723:17;;:3;:17;;;;12742:12;;;;;;;;;;;;;;;;::::0;12715:40:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12764:24;12774:3;12779:8;12764:9;:24::i;:::-;12801:16;:3;:14;;;:16::i;:::-;12797:214;;;12833:13;12869:3;12849:41;;;12891:10;12903:5;12910:8;12920:5;12849:77;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12833:93;;1145:10;12953:24;;12943:34;;;:6;:34;;;;12979:23;;;;;;;;;;;;;;;;::::0;12935:68:::2;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;12797:214;;2799:1;2545::::1;12426:590:::0;;;;;;:::o;2423:154:12:-;2517:21;2529:8;2517:11;:21::i;:::-;2554:7;:17;2562:8;2554:17;;;;;;;;;;;;2547:24;;;;:::i;:::-;2423:154;:::o;3803:208:3:-;3936:7;3962:43;3998:6;3962:35;:43::i;:::-;3955:50;;3803:208;;;:::o;1867:153:12:-;1965:13;1997:7;:17;2005:8;1997:17;;;;;;;;;;;1990:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1867:153;;;:::o;2566:218:11:-;2678:26;2690:3;2695:8;2678:11;:26::i;:::-;2711:6;2723:8;2711:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2777:1;2761:6;:13;;;;:17;;;;:::i;:::-;2739:9;:19;2749:8;2739:19;;;;;;;;;;;:39;;;;2566:218;;:::o;2972:157:12:-;3079:8;2774:1:13;2743:33;;:9;:19;2753:8;2743:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2778:13;;;;;;;;;;;;;;;;;2735:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;3119:4:12::1;3099:7;:17;3107:8;3099:17;;;;;;;;;;;:24;;;;;;;;;;;;:::i;:::-;;2972:157:::0;;;:::o;13149:110:13:-;13231:12;:22;13244:8;13231:22;;;;;;;;;;;;13224:29;;;;;;;;;;;13149:110;:::o;2860:193:3:-;2998:49;3031:5;3038:8;2998:32;:49::i;:::-;2860:193;;:::o;3324:183::-;3457:44;3487:3;3492:8;3457:29;:44::i;:::-;3324:183;;:::o;484:780:14:-;567:17;1008:16;1031:19;1053:66;1031:88;;;;1161:5;1149:18;1137:30;;1227:3;1215:15;;:8;:15;;:42;;;;;1246:11;1234:8;:23;;1215:42;1199:59;;484:780;;;;;:::o;3187:495:11:-;3281:21;3293:8;3281:11;:21::i;:::-;3311:18;3332:9;:19;3342:8;3332:19;;;;;;;;;;;;3311:40;;3358:22;3399:1;3383:6;:13;;;;:17;;;;:::i;:::-;3358:42;;3407:17;3427:6;3434:14;3427:22;;;;;;;;;;;;;;;;;;;;;;;;3407:42;;3479:9;3458:6;3465:10;3458:18;;;;;;;;;;;;;;;;;;;;;;;:30;;;;3497:6;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3636:10;3613:9;:20;3623:9;3613:20;;;;;;;;;;;:33;;;;3675:1;3653:9;:19;3663:8;3653:19;;;;;;;;;;;:23;;;;3187:495;;;;:::o;5446:175::-;5564:7;5590:10;:18;5601:6;5590:18;;;;;;;;;;;;;;;:25;;;;5583:32;;5446:175;;;:::o;9689:297:13:-;9810:1;9795:17;;:3;:17;;;;9814:12;;;;;;;;;;;;;;;;;9787:40;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;9873:1;9842:33;;:9;:19;9852:8;9842:19;;;;;;;;;;;;;;;;;;;;;:33;;;9877:18;;;;;;;;;;;;;;;;;9834:62;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;9905:26;9917:3;9922:8;9905:11;:26::i;:::-;9971:8;9966:3;9945:35;;9962:1;9945:35;;;;;;;;;;;;9689:297;;:::o;3961:602:11:-;4115:5;4092:28;;:9;:19;4102:8;4092:19;;;;;;;;;;;;;;;;;;;;;:28;;;4122:9;;;;;;;;;;;;;;;;;4084:48;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;4146:9;:19;4156:8;4146:19;;;;;;;;;;;;4139:26;;;;;;;;;;;4174;4203:14;:24;4218:8;4203:24;;;;;;;;;;;;4174:53;;4234:22;4286:1;4259:10;:17;4270:5;4259:17;;;;;;;;;;;;;;;:24;;;;:28;;;;:::i;:::-;4234:53;;4318:18;4300:14;:36;4296:230;;4352:17;4372:10;:17;4383:5;4372:17;;;;;;;;;;;;;;;4390:14;4372:33;;;;;;;;;;;;;;;;;;;;;;;;4352:53;;4454:9;4414:10;:17;4425:5;4414:17;;;;;;;;;;;;;;;4432:18;4414:37;;;;;;;;;;;;;;;;;;;;;;;:49;;;;4500:18;4472:14;:25;4487:9;4472:25;;;;;;;;;;;:46;;;;4296:230;;4534:10;:17;4545:5;4534:17;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3961:602;;;;:::o;4834:317::-;4991:1;4960:33;;:9;:19;4970:8;4960:19;;;;;;;;;;;;;;;;;;;;;:33;;;4995:18;;;;;;;;;;;;;;;;;4952:62;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;5043:3;5021:9;:19;5031:8;5021:19;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;5055:10;:15;5066:3;5055:15;;;;;;;;;;;;;;;5076:8;5055:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5144:1;5119:10;:15;5130:3;5119:15;;;;;;;;;;;;;;;:22;;;;:26;;;;:::i;:::-;5092:14;:24;5107:8;5092:24;;;;;;;;;;;:53;;;;4834:317;;:::o;10389:282:13:-;10477:8;2774:1;2743:33;;:9;:19;2753:8;2743:19;;;;;;;;;;;;;;;;;;;;;:33;;;;2778:13;;;;;;;;;;;;;;;;;2735:57;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;10497:18:::1;10518:9;:19;10528:8;10518:19;;;;;;;;;;;;;;;;;;;;;10497:40;;10544:24;10559:8;10544:14;:24::i;:::-;10575:36;10590:10;10602:8;10575:14;:36::i;:::-;10656:8;10652:1;10623:42;;10632:10;10623:42;;;;;;;;;;;;2799:1;10389:282:::0;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:139:17:-;;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;59:87;;;;:::o;152:133::-;;233:6;220:20;211:29;;249:30;273:5;249:30;:::i;:::-;201:84;;;;:::o;291:137::-;;374:6;361:20;352:29;;390:32;416:5;390:32;:::i;:::-;342:86;;;;:::o;434:141::-;;521:6;515:13;506:22;;537:32;563:5;537:32;:::i;:::-;496:79;;;;:::o;594:351::-;;;711:3;704:4;696:6;692:17;688:27;678:2;;729:1;726;719:12;678:2;765:6;752:20;742:30;;795:18;787:6;784:30;781:2;;;827:1;824;817:12;781:2;864:4;856:6;852:17;840:29;;918:3;910:4;902:6;898:17;888:8;884:32;881:41;878:2;;;935:1;932;925:12;878:2;668:277;;;;;:::o;965:352::-;;;1083:3;1076:4;1068:6;1064:17;1060:27;1050:2;;1101:1;1098;1091:12;1050:2;1137:6;1124:20;1114:30;;1167:18;1159:6;1156:30;1153:2;;;1199:1;1196;1189:12;1153:2;1236:4;1228:6;1224:17;1212:29;;1290:3;1282:4;1274:6;1270:17;1260:8;1256:32;1253:41;1250:2;;;1307:1;1304;1297:12;1250:2;1040:277;;;;;:::o;1323:139::-;;1407:6;1394:20;1385:29;;1423:33;1450:5;1423:33;:::i;:::-;1375:87;;;;:::o;1468:262::-;;1576:2;1564:9;1555:7;1551:23;1547:32;1544:2;;;1592:1;1589;1582:12;1544:2;1635:1;1660:53;1705:7;1696:6;1685:9;1681:22;1660:53;:::i;:::-;1650:63;;1606:117;1534:196;;;;:::o;1736:407::-;;;1861:2;1849:9;1840:7;1836:23;1832:32;1829:2;;;1877:1;1874;1867:12;1829:2;1920:1;1945:53;1990:7;1981:6;1970:9;1966:22;1945:53;:::i;:::-;1935:63;;1891:117;2047:2;2073:53;2118:7;2109:6;2098:9;2094:22;2073:53;:::i;:::-;2063:63;;2018:118;1819:324;;;;;:::o;2149:552::-;;;;2291:2;2279:9;2270:7;2266:23;2262:32;2259:2;;;2307:1;2304;2297:12;2259:2;2350:1;2375:53;2420:7;2411:6;2400:9;2396:22;2375:53;:::i;:::-;2365:63;;2321:117;2477:2;2503:53;2548:7;2539:6;2528:9;2524:22;2503:53;:::i;:::-;2493:63;;2448:118;2605:2;2631:53;2676:7;2667:6;2656:9;2652:22;2631:53;:::i;:::-;2621:63;;2576:118;2249:452;;;;;:::o;2707:829::-;;;;;;2885:3;2873:9;2864:7;2860:23;2856:33;2853:2;;;2902:1;2899;2892:12;2853:2;2945:1;2970:53;3015:7;3006:6;2995:9;2991:22;2970:53;:::i;:::-;2960:63;;2916:117;3072:2;3098:53;3143:7;3134:6;3123:9;3119:22;3098:53;:::i;:::-;3088:63;;3043:118;3200:2;3226:53;3271:7;3262:6;3251:9;3247:22;3226:53;:::i;:::-;3216:63;;3171:118;3356:2;3345:9;3341:18;3328:32;3387:18;3379:6;3376:30;3373:2;;;3419:1;3416;3409:12;3373:2;3455:64;3511:7;3502:6;3491:9;3487:22;3455:64;:::i;:::-;3437:82;;;;3299:230;2843:693;;;;;;;;:::o;3542:401::-;;;3664:2;3652:9;3643:7;3639:23;3635:32;3632:2;;;3680:1;3677;3670:12;3632:2;3723:1;3748:53;3793:7;3784:6;3773:9;3769:22;3748:53;:::i;:::-;3738:63;;3694:117;3850:2;3876:50;3918:7;3909:6;3898:9;3894:22;3876:50;:::i;:::-;3866:60;;3821:115;3622:321;;;;;:::o;3949:407::-;;;4074:2;4062:9;4053:7;4049:23;4045:32;4042:2;;;4090:1;4087;4080:12;4042:2;4133:1;4158:53;4203:7;4194:6;4183:9;4179:22;4158:53;:::i;:::-;4148:63;;4104:117;4260:2;4286:53;4331:7;4322:6;4311:9;4307:22;4286:53;:::i;:::-;4276:63;;4231:118;4032:324;;;;;:::o;4362:685::-;;;;;4524:2;4512:9;4503:7;4499:23;4495:32;4492:2;;;4540:1;4537;4530:12;4492:2;4583:1;4608:53;4653:7;4644:6;4633:9;4629:22;4608:53;:::i;:::-;4598:63;;4554:117;4710:2;4736:53;4781:7;4772:6;4761:9;4757:22;4736:53;:::i;:::-;4726:63;;4681:118;4866:2;4855:9;4851:18;4838:32;4897:18;4889:6;4886:30;4883:2;;;4929:1;4926;4919:12;4883:2;4965:65;5022:7;5013:6;5002:9;4998:22;4965:65;:::i;:::-;4947:83;;;;4809:231;4482:565;;;;;;;:::o;5053:260::-;;5160:2;5148:9;5139:7;5135:23;5131:32;5128:2;;;5176:1;5173;5166:12;5128:2;5219:1;5244:52;5288:7;5279:6;5268:9;5264:22;5244:52;:::i;:::-;5234:62;;5190:116;5118:195;;;;:::o;5319:282::-;;5437:2;5425:9;5416:7;5412:23;5408:32;5405:2;;;5453:1;5450;5443:12;5405:2;5496:1;5521:63;5576:7;5567:6;5556:9;5552:22;5521:63;:::i;:::-;5511:73;;5467:127;5395:206;;;;:::o;5607:262::-;;5715:2;5703:9;5694:7;5690:23;5686:32;5683:2;;;5731:1;5728;5721:12;5683:2;5774:1;5799:53;5844:7;5835:6;5824:9;5820:22;5799:53;:::i;:::-;5789:63;;5745:117;5673:196;;;;:::o;5875:118::-;5962:24;5980:5;5962:24;:::i;:::-;5957:3;5950:37;5940:53;;:::o;5999:109::-;6080:21;6095:5;6080:21;:::i;:::-;6075:3;6068:34;6058:50;;:::o;6114:360::-;;6228:38;6260:5;6228:38;:::i;:::-;6282:70;6345:6;6340:3;6282:70;:::i;:::-;6275:77;;6361:52;6406:6;6401:3;6394:4;6387:5;6383:16;6361:52;:::i;:::-;6438:29;6460:6;6438:29;:::i;:::-;6433:3;6429:39;6422:46;;6204:270;;;;;:::o;6480:364::-;;6596:39;6629:5;6596:39;:::i;:::-;6651:71;6715:6;6710:3;6651:71;:::i;:::-;6644:78;;6731:52;6776:6;6771:3;6764:4;6757:5;6753:16;6731:52;:::i;:::-;6808:29;6830:6;6808:29;:::i;:::-;6803:3;6799:39;6792:46;;6572:272;;;;;:::o;6850:118::-;6937:24;6955:5;6937:24;:::i;:::-;6932:3;6925:37;6915:53;;:::o;6974:222::-;;7105:2;7094:9;7090:18;7082:26;;7118:71;7186:1;7175:9;7171:17;7162:6;7118:71;:::i;:::-;7072:124;;;;:::o;7202:640::-;;7435:3;7424:9;7420:19;7412:27;;7449:71;7517:1;7506:9;7502:17;7493:6;7449:71;:::i;:::-;7530:72;7598:2;7587:9;7583:18;7574:6;7530:72;:::i;:::-;7612;7680:2;7669:9;7665:18;7656:6;7612:72;:::i;:::-;7731:9;7725:4;7721:20;7716:2;7705:9;7701:18;7694:48;7759:76;7830:4;7821:6;7759:76;:::i;:::-;7751:84;;7402:440;;;;;;;:::o;7848:210::-;;7973:2;7962:9;7958:18;7950:26;;7986:65;8048:1;8037:9;8033:17;8024:6;7986:65;:::i;:::-;7940:118;;;;:::o;8064:313::-;;8215:2;8204:9;8200:18;8192:26;;8264:9;8258:4;8254:20;8250:1;8239:9;8235:17;8228:47;8292:78;8365:4;8356:6;8292:78;:::i;:::-;8284:86;;8182:195;;;;:::o;8383:222::-;;8514:2;8503:9;8499:18;8491:26;;8527:71;8595:1;8584:9;8580:17;8571:6;8527:71;:::i;:::-;8481:124;;;;:::o;8611:98::-;;8696:5;8690:12;8680:22;;8669:40;;;:::o;8715:99::-;;8801:5;8795:12;8785:22;;8774:40;;;:::o;8820:168::-;;8937:6;8932:3;8925:19;8977:4;8972:3;8968:14;8953:29;;8915:73;;;;:::o;8994:169::-;;9112:6;9107:3;9100:19;9152:4;9147:3;9143:14;9128:29;;9090:73;;;;:::o;9169:191::-;;9229:20;9247:1;9229:20;:::i;:::-;9224:25;;9263:20;9281:1;9263:20;:::i;:::-;9258:25;;9302:1;9299;9296:8;9293:2;;;9307:18;;:::i;:::-;9293:2;9352:1;9349;9345:9;9337:17;;9214:146;;;;:::o;9366:96::-;;9432:24;9450:5;9432:24;:::i;:::-;9421:35;;9411:51;;;:::o;9468:90::-;;9545:5;9538:13;9531:21;9520:32;;9510:48;;;:::o;9564:149::-;;9640:66;9633:5;9629:78;9618:89;;9608:105;;;:::o;9719:126::-;;9796:42;9789:5;9785:54;9774:65;;9764:81;;;:::o;9851:77::-;;9917:5;9906:16;;9896:32;;;:::o;9934:307::-;10002:1;10012:113;10026:6;10023:1;10020:13;10012:113;;;10111:1;10106:3;10102:11;10096:18;10092:1;10087:3;10083:11;10076:39;10048:2;10045:1;10041:10;10036:15;;10012:113;;;10143:6;10140:1;10137:13;10134:2;;;10223:1;10214:6;10209:3;10205:16;10198:27;10134:2;9983:258;;;;:::o;10247:320::-;;10328:1;10322:4;10318:12;10308:22;;10375:1;10369:4;10365:12;10396:18;10386:2;;10452:4;10444:6;10440:17;10430:27;;10386:2;10514;10506:6;10503:14;10483:18;10480:38;10477:2;;;10533:18;;:::i;:::-;10477:2;10298:269;;;;:::o;10573:180::-;10621:77;10618:1;10611:88;10718:4;10715:1;10708:15;10742:4;10739:1;10732:15;10759:180;10807:77;10804:1;10797:88;10904:4;10901:1;10894:15;10928:4;10925:1;10918:15;10945:102;;11037:2;11033:7;11028:2;11021:5;11017:14;11013:28;11003:38;;10993:54;;;:::o;11053:122::-;11126:24;11144:5;11126:24;:::i;:::-;11119:5;11116:35;11106:2;;11165:1;11162;11155:12;11106:2;11096:79;:::o;11181:116::-;11251:21;11266:5;11251:21;:::i;:::-;11244:5;11241:32;11231:2;;11287:1;11284;11277:12;11231:2;11221:76;:::o;11303:120::-;11375:23;11392:5;11375:23;:::i;:::-;11368:5;11365:34;11355:2;;11413:1;11410;11403:12;11355:2;11345:78;:::o;11429:122::-;11502:24;11520:5;11502:24;:::i;:::-;11495:5;11492:35;11482:2;;11541:1;11538;11531:12;11482:2;11472:79;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../tokens/nf-token-metadata.sol\";\r\nimport \"../tokens/nf-token-enumerable.sol\";\r\nimport \"../ownership/ownable.sol\";\r\n\r\n/**\r\n * @dev This is an example contract implementation of NFToken with enumerable and metadata\r\n * extensions.\r\n */\r\ncontract NFTokenMetadataEnumerableMock is\r\n  NFTokenEnumerable,\r\n  NFTokenMetadata,\r\n  Ownable\r\n{\r\n\r\n  /**\r\n   * @dev Contract constructor.\r\n   * @param _name A descriptive name for a collection of NFTs.\r\n   * @param _symbol An abbreviated name for NFTokens.\r\n   */\r\n  constructor(\r\n    string memory _name,\r\n    string memory _symbol\r\n  )\r\n  {\r\n    nftName = _name;\r\n    nftSymbol = _symbol;\r\n  }\r\n\r\n  /**\r\n   * @dev Mints a new NFT.\r\n   * @param _to The address that will own the minted NFT.\r\n   * @param _tokenId of the NFT to be minted by the msg.sender.\r\n   * @param _uri String representing RFC 3986 URI.\r\n   */\r\n  function mint(\r\n    address _to,\r\n    uint256 _tokenId,\r\n    string calldata _uri\r\n  )\r\n    external\r\n    onlyOwner\r\n  {\r\n    super._mint(_to, _tokenId);\r\n    super._setTokenUri(_tokenId, _uri);\r\n  }\r\n\r\n  /**\r\n   * @dev Removes a NFT from owner.\r\n   * @param _tokenId Which NFT we want to remove.\r\n   */\r\n  function burn(\r\n    uint256 _tokenId\r\n  )\r\n    external\r\n    onlyOwner\r\n  {\r\n    super._burn(_tokenId);\r\n  }\r\n\r\n  /**\r\n   * @dev Mints a new NFT.\r\n   * @notice This is an internal function which should be called from user-implemented external\r\n   * mint function. Its purpose is to show and properly initialize data structures when using this\r\n   * implementation.\r\n   * @param _to The address that will own the minted NFT.\r\n   * @param _tokenId of the NFT to be minted by the msg.sender.\r\n   */\r\n  function _mint(\r\n    address _to,\r\n    uint256 _tokenId\r\n  )\r\n    internal\r\n    override(NFToken, NFTokenEnumerable)\r\n    virtual\r\n  {\r\n    NFTokenEnumerable._mint(_to, _tokenId);\r\n  }\r\n\r\n  /**\r\n   * @dev Burns a NFT.\r\n   * @notice This is an internal function which should be called from user-implemented external\r\n   * burn function. Its purpose is to show and properly initialize data structures when using this\r\n   * implementation. Also, note that this burn implementation allows the minter to re-mint a burned\r\n   * NFT.\r\n   * @param _tokenId ID of the NFT to be burned.\r\n   */\r\n  function _burn(\r\n    uint256 _tokenId\r\n  )\r\n    internal\r\n    override(NFTokenMetadata, NFTokenEnumerable)\r\n    virtual\r\n  {\r\n    NFTokenEnumerable._burn(_tokenId);\r\n    if (bytes(idToUri[_tokenId]).length != 0)\r\n    {\r\n      delete idToUri[_tokenId];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @notice Use and override this function with caution. Wrong usage can have serious consequences.\r\n   * @dev Removes a NFT from an address.\r\n   * @param _from Address from wich we want to remove the NFT.\r\n   * @param _tokenId Which NFT we want to remove.\r\n   */\r\n  function _removeNFToken(\r\n    address _from,\r\n    uint256 _tokenId\r\n  )\r\n    internal\r\n    override(NFToken, NFTokenEnumerable)\r\n  {\r\n    NFTokenEnumerable._removeNFToken(_from, _tokenId);\r\n  }\r\n\r\n  /**\r\n   * @notice Use and override this function with caution. Wrong usage can have serious consequences.\r\n   * @dev Assigns a new NFT to an address.\r\n   * @param _to Address to wich we want to add the NFT.\r\n   * @param _tokenId Which NFT we want to add.\r\n   */\r\n  function _addNFToken(\r\n    address _to,\r\n    uint256 _tokenId\r\n  )\r\n    internal\r\n    override(NFToken, NFTokenEnumerable)\r\n  {\r\n    NFTokenEnumerable._addNFToken(_to, _tokenId);\r\n  }\r\n\r\n   /**\r\n   * @dev Helper function that gets NFT count of owner. This is needed for overriding in enumerable\r\n   * extension to remove double storage(gas optimization) of owner nft count.\r\n   * @param _owner Address for whom to query the count.\r\n   * @return Number of _owner NFTs.\r\n   */\r\n  function _getOwnerNFTCount(\r\n    address _owner\r\n  )\r\n    internal\r\n    override(NFToken, NFTokenEnumerable)\r\n    view\r\n    returns (uint256)\r\n  {\r\n    return NFTokenEnumerable._getOwnerNFTCount(_owner);\r\n  }\r\n\r\n}\r\n",
  "sourcePath": "C:\\Users\\mital\\OneDrive\\Desktop\\Mitali-hackx\\contracts\\contracts\\mocks\\nf-token-metadata-enumerable-mock.sol",
  "ast": {
    "absolutePath": "project:/contracts/contracts/mocks/nf-token-metadata-enumerable-mock.sol",
    "exportedSymbols": {
      "AddressUtils": [
        1974
      ],
      "ERC165": [
        1986
      ],
      "ERC721": [
        822
      ],
      "ERC721Enumerable": [
        667
      ],
      "ERC721Metadata": [
        691
      ],
      "ERC721TokenReceiver": [
        709
      ],
      "NFToken": [
        1942
      ],
      "NFTokenEnumerable": [
        1149
      ],
      "NFTokenMetadata": [
        1272
      ],
      "NFTokenMetadataEnumerableMock": [
        470
      ],
      "Ownable": [
        639
      ],
      "SupportsInterface": [
        2023
      ]
    },
    "id": 471,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 294,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:3"
      },
      {
        "absolutePath": "project:/contracts/contracts/tokens/nf-token-metadata.sol",
        "file": "../tokens/nf-token-metadata.sol",
        "id": 295,
        "nodeType": "ImportDirective",
        "scope": 471,
        "sourceUnit": 1273,
        "src": "60:41:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/contracts/tokens/nf-token-enumerable.sol",
        "file": "../tokens/nf-token-enumerable.sol",
        "id": 296,
        "nodeType": "ImportDirective",
        "scope": 471,
        "sourceUnit": 1150,
        "src": "103:43:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/contracts/ownership/ownable.sol",
        "file": "../ownership/ownable.sol",
        "id": 297,
        "nodeType": "ImportDirective",
        "scope": 471,
        "sourceUnit": 640,
        "src": "148:34:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 299,
              "name": "NFTokenEnumerable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1149,
              "src": "349:17:3"
            },
            "id": 300,
            "nodeType": "InheritanceSpecifier",
            "src": "349:17:3"
          },
          {
            "baseName": {
              "id": 301,
              "name": "NFTokenMetadata",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1272,
              "src": "371:15:3"
            },
            "id": 302,
            "nodeType": "InheritanceSpecifier",
            "src": "371:15:3"
          },
          {
            "baseName": {
              "id": 303,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 639,
              "src": "391:7:3"
            },
            "id": 304,
            "nodeType": "InheritanceSpecifier",
            "src": "391:7:3"
          }
        ],
        "contractDependencies": [
          639,
          667,
          691,
          822,
          1149,
          1272,
          1942,
          1986,
          2023
        ],
        "contractKind": "contract",
        "documentation": {
          "id": 298,
          "nodeType": "StructuredDocumentation",
          "src": "186:116:3",
          "text": " @dev This is an example contract implementation of NFToken with enumerable and metadata\n extensions."
        },
        "fullyImplemented": true,
        "id": 470,
        "linearizedBaseContracts": [
          470,
          639,
          1272,
          691,
          1149,
          667,
          1942,
          2023,
          1986,
          822
        ],
        "name": "NFTokenMetadataEnumerableMock",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 320,
              "nodeType": "Block",
              "src": "647:54:3",
              "statements": [
                {
                  "expression": {
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 312,
                      "name": "nftName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1161,
                      "src": "654:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 313,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 307,
                      "src": "664:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "654:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 315,
                  "nodeType": "ExpressionStatement",
                  "src": "654:15:3"
                },
                {
                  "expression": {
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 316,
                      "name": "nftSymbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1164,
                      "src": "676:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 317,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 309,
                      "src": "688:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "676:19:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 319,
                  "nodeType": "ExpressionStatement",
                  "src": "676:19:3"
                }
              ]
            },
            "documentation": {
              "id": 305,
              "nodeType": "StructuredDocumentation",
              "src": "407:162:3",
              "text": " @dev Contract constructor.\n @param _name A descriptive name for a collection of NFTs.\n @param _symbol An abbreviated name for NFTokens."
            },
            "id": 321,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 307,
                  "mutability": "mutable",
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "591:19:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 306,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "591:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 309,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 321,
                  "src": "617:21:3",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 308,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "617:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "584:59:3"
            },
            "returnParameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "647:0:3"
            },
            "scope": 470,
            "src": "573:128:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 347,
              "nodeType": "Block",
              "src": "1044:80:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 336,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 324,
                        "src": "1063:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 337,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 326,
                        "src": "1068:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 333,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1051:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadataEnumerableMock_$470_$",
                          "typeString": "type(contract super NFTokenMetadataEnumerableMock)"
                        }
                      },
                      "id": 335,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 959,
                      "src": "1051:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1051:26:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "1051:26:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 343,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 326,
                        "src": "1103:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 344,
                        "name": "_uri",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 328,
                        "src": "1113:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "id": 340,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1084:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadataEnumerableMock_$470_$",
                          "typeString": "type(contract super NFTokenMetadataEnumerableMock)"
                        }
                      },
                      "id": 342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setTokenUri",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1271,
                      "src": "1084:18:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,string memory)"
                      }
                    },
                    "id": 345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1084:34:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 346,
                  "nodeType": "ExpressionStatement",
                  "src": "1084:34:3"
                }
              ]
            },
            "documentation": {
              "id": 322,
              "nodeType": "StructuredDocumentation",
              "src": "707:214:3",
              "text": " @dev Mints a new NFT.\n @param _to The address that will own the minted NFT.\n @param _tokenId of the NFT to be minted by the msg.sender.\n @param _uri String representing RFC 3986 URI."
            },
            "functionSelector": "d3fc9864",
            "id": 348,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 331,
                "modifierName": {
                  "id": 330,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 610,
                  "src": "1031:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1031:9:3"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 329,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 324,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "945:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 323,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "945:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 326,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "963:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "963:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 328,
                  "mutability": "mutable",
                  "name": "_uri",
                  "nodeType": "VariableDeclaration",
                  "scope": 348,
                  "src": "986:20:3",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 327,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "986:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "938:73:3"
            },
            "returnParameters": {
              "id": 332,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1044:0:3"
            },
            "scope": 470,
            "src": "925:199:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 362,
              "nodeType": "Block",
              "src": "1306:34:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 359,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 351,
                        "src": "1325:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 356,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967271,
                        "src": "1313:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_NFTokenMetadataEnumerableMock_$470_$",
                          "typeString": "type(contract super NFTokenMetadataEnumerableMock)"
                        }
                      },
                      "id": 358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1253,
                      "src": "1313:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1313:21:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "1313:21:3"
                }
              ]
            },
            "documentation": {
              "id": 349,
              "nodeType": "StructuredDocumentation",
              "src": "1130:98:3",
              "text": " @dev Removes a NFT from owner.\n @param _tokenId Which NFT we want to remove."
            },
            "functionSelector": "42966c68",
            "id": 363,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 354,
                "modifierName": {
                  "id": 353,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 610,
                  "src": "1293:9:3"
                },
                "nodeType": "ModifierInvocation",
                "src": "1293:9:3"
              }
            ],
            "name": "burn",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 352,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 351,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 363,
                  "src": "1252:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 350,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1252:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1245:28:3"
            },
            "returnParameters": {
              "id": 355,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1306:0:3"
            },
            "scope": 470,
            "src": "1232:108:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              959,
              1748
            ],
            "body": {
              "id": 381,
              "nodeType": "Block",
              "src": "1864:51:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 377,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 366,
                        "src": "1895:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 378,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 368,
                        "src": "1900:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 374,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1149,
                        "src": "1871:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1149_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 376,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 959,
                      "src": "1871:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1871:38:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 380,
                  "nodeType": "ExpressionStatement",
                  "src": "1871:38:3"
                }
              ]
            },
            "documentation": {
              "id": 364,
              "nodeType": "StructuredDocumentation",
              "src": "1346:381:3",
              "text": " @dev Mints a new NFT.\n @notice This is an internal function which should be called from user-implemented external\n mint function. Its purpose is to show and properly initialize data structures when using this\n implementation.\n @param _to The address that will own the minted NFT.\n @param _tokenId of the NFT to be minted by the msg.sender."
            },
            "id": 382,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_mint",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 372,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 370,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1942,
                  "src": "1820:7:3"
                },
                {
                  "id": 371,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1149,
                  "src": "1829:17:3"
                }
              ],
              "src": "1811:36:3"
            },
            "parameters": {
              "id": 369,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 366,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 382,
                  "src": "1752:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 365,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1752:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 368,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 382,
                  "src": "1770:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1770:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1745:46:3"
            },
            "returnParameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1864:0:3"
            },
            "scope": 470,
            "src": "1731:184:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1015,
              1253
            ],
            "body": {
              "id": 413,
              "nodeType": "Block",
              "src": "2441:140:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 394,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 385,
                        "src": "2472:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 391,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1149,
                        "src": "2448:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1149_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1015,
                      "src": "2448:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2448:33:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 396,
                  "nodeType": "ExpressionStatement",
                  "src": "2448:33:3"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "baseExpression": {
                              "id": 399,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1169,
                              "src": "2498:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 401,
                            "indexExpression": {
                              "id": 400,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 385,
                              "src": "2506:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2498:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2492:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 397,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "2492:5:3",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2492:24:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      "id": 403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2492:31:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2527:1:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2492:36:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 412,
                  "nodeType": "IfStatement",
                  "src": "2488:88:3",
                  "trueBody": {
                    "id": 411,
                    "nodeType": "Block",
                    "src": "2535:41:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "2544:24:3",
                          "subExpression": {
                            "baseExpression": {
                              "id": 406,
                              "name": "idToUri",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1169,
                              "src": "2551:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                "typeString": "mapping(uint256 => string storage ref)"
                              }
                            },
                            "id": 408,
                            "indexExpression": {
                              "id": 407,
                              "name": "_tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 385,
                              "src": "2559:8:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2551:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 410,
                        "nodeType": "ExpressionStatement",
                        "src": "2544:24:3"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 383,
              "nodeType": "StructuredDocumentation",
              "src": "1921:393:3",
              "text": " @dev Burns a NFT.\n @notice This is an internal function which should be called from user-implemented external\n burn function. Its purpose is to show and properly initialize data structures when using this\n implementation. Also, note that this burn implementation allows the minter to re-mint a burned\n NFT.\n @param _tokenId ID of the NFT to be burned."
            },
            "id": 414,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_burn",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 389,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 387,
                  "name": "NFTokenMetadata",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1272,
                  "src": "2389:15:3"
                },
                {
                  "id": 388,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1149,
                  "src": "2406:17:3"
                }
              ],
              "src": "2380:44:3"
            },
            "parameters": {
              "id": 386,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 385,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 414,
                  "src": "2339:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 384,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2339:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2332:28:3"
            },
            "returnParameters": {
              "id": 390,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2441:0:3"
            },
            "scope": 470,
            "src": "2318:263:3",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1087,
              1811
            ],
            "body": {
              "id": 432,
              "nodeType": "Block",
              "src": "2991:62:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 428,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 417,
                        "src": "3031:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 429,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 419,
                        "src": "3038:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 425,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1149,
                        "src": "2998:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1149_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_removeNFToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1087,
                      "src": "2998:32:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2998:49:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 431,
                  "nodeType": "ExpressionStatement",
                  "src": "2998:49:3"
                }
              ]
            },
            "documentation": {
              "id": 415,
              "nodeType": "StructuredDocumentation",
              "src": "2587:269:3",
              "text": " @notice Use and override this function with caution. Wrong usage can have serious consequences.\n @dev Removes a NFT from an address.\n @param _from Address from wich we want to remove the NFT.\n @param _tokenId Which NFT we want to remove."
            },
            "id": 433,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_removeNFToken",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 423,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 421,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1942,
                  "src": "2960:7:3"
                },
                {
                  "id": 422,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1149,
                  "src": "2969:17:3"
                }
              ],
              "src": "2951:36:3"
            },
            "parameters": {
              "id": 420,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 417,
                  "mutability": "mutable",
                  "name": "_from",
                  "nodeType": "VariableDeclaration",
                  "scope": 433,
                  "src": "2890:13:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 416,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2890:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 419,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 433,
                  "src": "2910:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 418,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2910:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2883:48:3"
            },
            "returnParameters": {
              "id": 424,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2991:0:3"
            },
            "scope": 470,
            "src": "2860:193:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1133,
              1844
            ],
            "body": {
              "id": 451,
              "nodeType": "Block",
              "src": "3450:57:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 447,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 436,
                        "src": "3487:3:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 448,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 438,
                        "src": "3492:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 444,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1149,
                        "src": "3457:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1149_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_addNFToken",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1133,
                      "src": "3457:29:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3457:44:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 450,
                  "nodeType": "ExpressionStatement",
                  "src": "3457:44:3"
                }
              ]
            },
            "documentation": {
              "id": 434,
              "nodeType": "StructuredDocumentation",
              "src": "3059:261:3",
              "text": " @notice Use and override this function with caution. Wrong usage can have serious consequences.\n @dev Assigns a new NFT to an address.\n @param _to Address to wich we want to add the NFT.\n @param _tokenId Which NFT we want to add."
            },
            "id": 452,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addNFToken",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 442,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 440,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1942,
                  "src": "3419:7:3"
                },
                {
                  "id": 441,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1149,
                  "src": "3428:17:3"
                }
              ],
              "src": "3410:36:3"
            },
            "parameters": {
              "id": 439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 436,
                  "mutability": "mutable",
                  "name": "_to",
                  "nodeType": "VariableDeclaration",
                  "scope": 452,
                  "src": "3351:11:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 435,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3351:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 438,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 452,
                  "src": "3369:16:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 437,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3369:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3344:46:3"
            },
            "returnParameters": {
              "id": 443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3450:0:3"
            },
            "scope": 470,
            "src": "3324:183:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              1148,
              1857
            ],
            "body": {
              "id": 468,
              "nodeType": "Block",
              "src": "3948:63:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 465,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 455,
                        "src": "3998:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 463,
                        "name": "NFTokenEnumerable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1149,
                        "src": "3962:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_NFTokenEnumerable_$1149_$",
                          "typeString": "type(contract NFTokenEnumerable)"
                        }
                      },
                      "id": 464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_getOwnerNFTCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1148,
                      "src": "3962:35:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3962:43:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 462,
                  "id": 467,
                  "nodeType": "Return",
                  "src": "3955:50:3"
                }
              ]
            },
            "documentation": {
              "id": 453,
              "nodeType": "StructuredDocumentation",
              "src": "3514:285:3",
              "text": " @dev Helper function that gets NFT count of owner. This is needed for overriding in enumerable\n extension to remove double storage(gas optimization) of owner nft count.\n @param _owner Address for whom to query the count.\n @return Number of _owner NFTs."
            },
            "id": 469,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getOwnerNFTCount",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 459,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "id": 457,
                  "name": "NFToken",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1942,
                  "src": "3884:7:3"
                },
                {
                  "id": 458,
                  "name": "NFTokenEnumerable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1149,
                  "src": "3893:17:3"
                }
              ],
              "src": "3875:36:3"
            },
            "parameters": {
              "id": 456,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 455,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 469,
                  "src": "3836:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 454,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3836:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3829:26:3"
            },
            "returnParameters": {
              "id": 462,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 461,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 469,
                  "src": "3936:7:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3936:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3935:9:3"
            },
            "scope": 470,
            "src": "3803:208:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 471,
        "src": "304:3712:3"
      }
    ],
    "src": "33:3985:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.15",
  "updatedAt": "2023-10-03T18:06:21.217Z",
  "devdoc": {
    "details": "This is an example contract implementation of NFToken with enumerable and metadata extensions.",
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "Set or reaffirm the approved address for an NFT. This function can be changed to payable.",
        "params": {
          "_approved": "Address to be approved for the given NFT ID.",
          "_tokenId": "ID of the token to be approved."
        }
      },
      "balanceOf(address)": {
        "details": "Returns the number of NFTs owned by `_owner`. NFTs assigned to the zero address are considered invalid, and this function throws for queries about the zero address.",
        "params": {
          "_owner": "Address for whom to query the balance."
        },
        "returns": {
          "_0": "Balance of _owner."
        }
      },
      "burn(uint256)": {
        "details": "Removes a NFT from owner.",
        "params": {
          "_tokenId": "Which NFT we want to remove."
        }
      },
      "constructor": {
        "details": "Contract constructor.",
        "params": {
          "_name": "A descriptive name for a collection of NFTs.",
          "_symbol": "An abbreviated name for NFTokens."
        }
      },
      "getApproved(uint256)": {
        "details": "Get the approved address for a single NFT.",
        "params": {
          "_tokenId": "ID of the NFT to query the approval of."
        },
        "returns": {
          "_0": "Address that _tokenId is approved for."
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Checks if `_operator` is an approved operator for `_owner`.",
        "params": {
          "_operator": "The address that acts on behalf of the owner.",
          "_owner": "The address that owns the NFTs."
        },
        "returns": {
          "_0": "True if approved for all, false otherwise."
        }
      },
      "mint(address,uint256,string)": {
        "details": "Mints a new NFT.",
        "params": {
          "_to": "The address that will own the minted NFT.",
          "_tokenId": "of the NFT to be minted by the msg.sender.",
          "_uri": "String representing RFC 3986 URI."
        }
      },
      "name()": {
        "details": "Returns a descriptive name for a collection of NFTokens.",
        "returns": {
          "_name": "Representing name."
        }
      },
      "ownerOf(uint256)": {
        "details": "Returns the address of the owner of the NFT. NFTs assigned to the zero address are considered invalid, and queries about them do throw.",
        "params": {
          "_tokenId": "The identifier for an NFT."
        },
        "returns": {
          "_owner": "Address of _tokenId owner."
        }
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Transfers the ownership of an NFT from one address to another address. This function can be changed to payable.",
        "params": {
          "_data": "Additional data with no specified format, sent in call to `_to`.",
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Enables or disables approval for a third party (\"operator\") to manage all of `msg.sender`'s assets. It also emits the ApprovalForAll event.",
        "params": {
          "_approved": "True if the operators is approved, false to revoke approval.",
          "_operator": "Address to add to the set of authorized operators."
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Function to check which interfaces are suported by this contract.",
        "params": {
          "_interfaceID": "Id of the interface."
        },
        "returns": {
          "_0": "True if _interfaceID is supported, false otherwise."
        }
      },
      "symbol()": {
        "details": "Returns an abbreviated name for NFTokens.",
        "returns": {
          "_symbol": "Representing symbol."
        }
      },
      "tokenByIndex(uint256)": {
        "details": "Returns NFT ID by its index.",
        "params": {
          "_index": "A counter less than `totalSupply()`."
        },
        "returns": {
          "_0": "Token id."
        }
      },
      "tokenOfOwnerByIndex(address,uint256)": {
        "details": "returns the n-th NFT ID from a list of owner's tokens.",
        "params": {
          "_index": "Index number representing n-th token in owner's list of tokens.",
          "_owner": "Token owner's address."
        },
        "returns": {
          "_0": "Token id."
        }
      },
      "tokenURI(uint256)": {
        "details": "A distinct URI (RFC 3986) for a given NFT.",
        "params": {
          "_tokenId": "Id for which we want uri."
        },
        "returns": {
          "_0": "URI of _tokenId."
        }
      },
      "totalSupply()": {
        "details": "Returns the count of all existing NFTokens.",
        "returns": {
          "_0": "Total supply of NFTs."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. This function can be changed to payable.",
        "params": {
          "_from": "The current owner of the NFT.",
          "_to": "The new owner.",
          "_tokenId": "The NFT to transfer."
        }
      },
      "transferOwnership(address)": {
        "details": "Allows the current owner to transfer control of the contract to a newOwner.",
        "params": {
          "_newOwner": "The address to transfer ownership to."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "approve(address,uint256)": {
        "notice": "The zero address indicates there is no approved address. Throws unless `msg.sender` is the current NFT owner, or an authorized operator of the current owner."
      },
      "getApproved(uint256)": {
        "notice": "Throws if `_tokenId` is not a valid NFT."
      },
      "safeTransferFrom(address,address,uint256)": {
        "notice": "This works identically to the other function with an extra data parameter, except this function just sets data to \"\"."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "notice": "Throws unless `msg.sender` is the current owner, an authorized operator, or the approved address for this NFT. Throws if `_from` is not the current owner. Throws if `_to` is the zero address. Throws if `_tokenId` is not a valid NFT. When transfer is complete, this function checks if `_to` is a smart contract (code size > 0). If so, it calls `onERC721Received` on `_to` and throws if the return value is not `bytes4(keccak256(\"onERC721Received(address,uint256,bytes)\"))`."
      },
      "setApprovalForAll(address,bool)": {
        "notice": "This works even if sender doesn't own any tokens at the time."
      },
      "transferFrom(address,address,uint256)": {
        "notice": "The caller is responsible to confirm that `_to` is capable of receiving NFTs or else they may be permanently lost."
      }
    },
    "version": 1
  }
}